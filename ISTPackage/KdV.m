(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Needs["RiemannHilbert`"];
HillKdV::usage="HillKdV[q,n] gives the eigenvalues of the modified Zakharov-Shabat scattering (including continuous spectrum) problem with n Fourier modes using Hill's method.";
LocatePolesKdV::usage="LocatePoles[q,n] gives the true eigenvalues of the modified Zakharov-Shabat scattering problem.";
KdV::usage="KdV[i][x,t] = {out,\[CapitalPhi],rhp1,rhp2,timestring} where out is the solution of KdV, \[CapitalPhi] is the solution of the Riemann-Hilbert problem, rhp1 and rhp2 are the Riemann-Hilbert problems and timestring is the string of computation times.  This is done using the deformation in Region i.";
KdVAuto::usage="KdVAuto[x,t] returns the solution of the KdV equation with deformation selected automagically.  Many things must be initialized.  Sample code:

	q[x_]:=.1 Exp[-x^2];\[IndentingNewLine]Defocusing[];
	H=ScatteringMatrixFiniteKdV[q,50,6];\[IndentingNewLine]aa//Clear;bb//Clear;\[IndentingNewLine]aa[k_]:=aa[k]=H[k][[1,1]];\[IndentingNewLine]bb[k_]:=bb[k]=H[k][[2,1]];
	SetParams[.6,.1,10.^(-9),15,30];\[IndentingNewLine]h[k_]:=3/(1+Abs[k/2+1/3.2]^8);\[IndentingNewLine]Setrsamp[h];\[IndentingNewLine]Settimeflag[False];\[IndentingNewLine]\[Nu]=Getnu[];\[IndentingNewLine]\[Rho][k_]:=bb[k]/aa[k];
	up=I(\[Nu]+.0001);m=40;el=8;\[IndentingNewLine]f={Fun[\[Rho],Line[{-el,0}-up],m],Fun[\[Rho],Line[{0,el}-up],m],Fun[\[Rho],Line[{el,0}+up],m],Fun[\[Rho],Line[{0,-el}+up],m]};

	up=I(\[Nu]+.0001);m=40;el=8;\[IndentingNewLine]f={Fun[\[Rho],Line[{-el,0}-up],m],Fun[\[Rho],Line[{0,el}-up],m],Fun[\[Rho],Line[{el,0}+up],m],Fun[\[Rho],Line[{0,-el}+up],m]};
SetScatteringData[aa,bb,m\[Rho],LocatePoles[q,40]]"
Focusing::usage="Focusing[], switch to focusing KdV";
Defocusing::usage="Defocusing[], switch to focusing KdV";
SetScatteringData::usage="SetScatteringData[a,b,\[Rho],poles] or SetScatteringData[a,b,\[Rho],poles,normingConstants] sets the scattering data for the KdV equation";
SetParams::usage="SetParams[\[Nu],rad,globalTol,smallN,bigN] sets the parameters for the rest of the code:
	\[Nu]: half of width of strip of analyticity
	rad: radius of soliton contours
	globalTol: contour truncation tolerance
	smallN: small number of collocation points
	bigN: big number of collocation points";
GetScatteringData::usage="GetScatteringData[] = {\[Rho],poles,normingConstants}";
ScatteringMatrixFiniteKdV::usage="ScatteringMatrixFiniteKdV[q,n,L] returns a function f[w] that produces an approximation of the scattering matrix at w. The parameter n indicates the number of collocation points and L sets the problem on [-L,L]
Sample code:
	q[x_]:=.1 Exp[-x^2+I x];\[IndentingNewLine]Defocusing[];
	H=ScatteringMatrixFiniteKdV[q,50,6];\[IndentingNewLine]aa//Clear;bb//Clear;\[IndentingNewLine]aa[k_]:=aa[k]=H[k][[1,1]];\[IndentingNewLine]bb[k_]:=bb[k]=H[k][[2,1]];
";
Getnu::usage="Getnu[] returns \[Nu]";
Setrsamp::usage="Setrsamp[h] sets a function that should be chosen so that that |\[Rho]| < h";
timestring::usage="A string updated by KdV[i][x,t]
(x,t) 1) Construct: --time to construct rhp1-- 1) Solve: --time to solve rhp1-- 2) Construct: --time to construct rhp2-- 2) Solve: --time to solve rhp2--";
Settimeflag::usage="Settimeflag[bool] bool = True forces timestring to be printed each time KdV[i][x,t] is called";
startift;
Setsingflag;
Getsingflag;
domainOutput;
ReflectionCoefficientKdV::usage="just for testing";

Begin["Private`"];


Focusing[]:=Module[{},\[Lambda]=1];
Defocusing[]:=Module[{},\[Lambda]=-1];
Defocusing[];(*Parameter left over from NLS and mKdV*)

SetScatteringData[aa_,bb_,rr_,ma_,mc_]:=Module[{},
r[k_]:=rr[k];
A=ma;
\[Tau][k_]:=1+\[Lambda] r[k]cc[r[cc[k]]];
\[Tau][_?InfinityQ]:=1;
\[Tau][k_List]:=\[Tau]/@k;
c=mc;
singflag = ZeroQ[rr[0.] +1.//Abs];
];
SetScatteringData[aa_,bb_,rr_,ma_,q_]:=Module[{},
r[k_]:=rr[k];
A=ma;
\[Tau][k_]:=1+\[Lambda] r[k]cc[r[cc[k]]];
\[Tau][_?InfinityQ]:=1;
\[Tau][k_List]:=\[Tau]/@k;
c = Residues[q,ma,0];
singflag = ZeroQ[rr[0.] +1.//Abs];
];
SetParams[nu_,rad1_,tol_,sN_,bN_]:=Module[{},
\[Nu]=nu; (*parameter for width of strip of analyticity*)
rad=rad1;
globalTol=tol;
smallN=sN;
bigN=bN;
];
GetScatteringData[]:=Module[{},{r,A,c}];
Getnu[]:=\[Nu];
Setrsamp[h_]:=Module[{},rsamp=h;dom=Truncate[globalTol][{Log[1-Abs[h[#]]^2]/.Underflow[]->0.&,Line[{-el,el}],100}][[1]];];

Setsingflag[bool_]:=Module[{},singflag = bool];
Setsingflag[True];

Getsingflag[]:=singflag;
Settimeflag[h_]:=Module[{},timeflag=h];
SetN[x_]:=Module[{},bigN=x[[1]];smallN=x[[2]];];
expconst=1;
el=100;
bigN=20;
smallN=10;


CME[x_]:=Chop[x,$MachineEpsilon];
ReflectionCoefficientKdV[q_,n_]:=Module[{qf,qfb,\[Phi]2,\[Phi]b1,\[Phi]b2,Dm,Dm2,Dmb,Dmb2,P,Pb,IIm,IImb},
qf=Fun[q,Line[{-\[Infinity],0}],n];
qfb=Fun[q,Line[{0,\[Infinity]}],n];
Dm=DerivativeMatrix[qf];
Dmb=DerivativeMatrix[qfb];
IIm=ReduceDimensionIntegrateMatrix[qf];
IImb=(ReduceDimensionIntegrateMatrix[(qfb//ReverseOrientation)]//Transpose//Reverse//Transpose//Reverse);
P=Dm+DiagonalMatrix[qf //Values].IIm;
Pb=Dmb+DiagonalMatrix[qfb//Values].IImb;

ReflectionCoefficientKdV[qf,qfb,P,Pb]
];
ReflectionCoefficientKdV[qf_,qfb_,P_,Pb_][_?NZeroQ]:=-1;
ReflectionCoefficientKdV[qf_,qfb_,P_,Pb_][w_]:=Module[{\[Phi]2,\[Phi]b1,\[Phi]b2},
\[Phi]2=IFun[LinearSolve[P-2 I w IdentityMatrix[Length[qf]],-Chop[Values[qf],$MachineTolerance]],qf//Domain]//Integrate;
\[Phi]b1=IFun[LinearSolve[Pb+2 I w IdentityMatrix[Length[qfb]],-Chop[Values[qfb],$MachineTolerance]],qfb//Domain]//Integrate//ZeroAtRight;
\[Phi]b2=IFun[LinearSolve[Pb-2 I w IdentityMatrix[Length[qfb]],-Chop[Values[qfb],$MachineTolerance]],qfb//Domain]//Integrate//ZeroAtRight;
LinearSolve[{{(1+(\[Phi]b1//First)) ,1+(\[Phi]b2//First)},
	{\[Phi]b1'+I w (1+\[Phi]b1)//First,\[Phi]b2'-I w (1+\[Phi]b2)//First}},{1+(\[Phi]2//Last),(\[Phi]2'-I w (1+\[Phi]2)//Last)}]//#[[1]]/#[[2]]&
]

ScatteringMatrixFiniteKdV[q_,n_,el_]:=Module[{qf,qfb,\[Phi]2,\[Phi]b1,\[Phi]b2,Dm,Dm2,Dmb,Dmb2,P,Pb,IIm,IImb},
qf=Fun[q,Line[{-el,0}],n];
qfb=Fun[q,Line[{0,el}],n];
Print[{qf//Values//First//Abs,qf//DCTPlot}];
Dm=DerivativeMatrix[qf];
Dmb=DerivativeMatrix[qfb];
IIm=ReduceDimensionIntegrateMatrix[qf];
IImb=(ReduceDimensionIntegrateMatrix[(qfb//ReverseOrientation)]//Transpose//Reverse//Transpose//Reverse);
P=IdentityMatrix[n]+IIm.DiagonalMatrix[qf //Values].IIm;
Pb=IdentityMatrix[n]+IImb.DiagonalMatrix[qfb//Values].IImb;

ScatteringMatrixFiniteKdV[qf,qfb,P,Pb,IIm,IImb]
];
ScatteringMatrixFiniteKdV[qf_,qfb_,P_,Pb_,IIm_,IImb_][w_]:=Module[{\[Phi]2,\[Phi]b1,\[Phi]b2,\[Phi]1},
\[Phi]2=IFun[LinearSolve[P-2 I w IIm,-Chop[IIm.Values[qf],$MachineTolerance]],qf//Domain]//Integrate;
\[Phi]1=IFun[LinearSolve[P+2 I w IIm,-Chop[IIm.Values[qf],$MachineTolerance]],qf//Domain]//Integrate;
\[Phi]b1=IFun[LinearSolve[Pb+2 I w IImb,-Chop[IImb.Values[qfb],$MachineTolerance]],qfb//Domain]//Integrate//ZeroAtRight;
\[Phi]b2=IFun[LinearSolve[Pb-2 I w IImb,-Chop[IImb.Values[qfb],$MachineTolerance]],qfb//Domain]//Integrate//ZeroAtRight;
Inverse[{{(1+(\[Phi]b1//First)) ,1+(\[Phi]b2//First)},
	{\[Phi]b1'+I w (1+\[Phi]b1)//First,\[Phi]b2'-I w (1+\[Phi]b2)//First}}].{{1+(\[Phi]1//Last),1+(\[Phi]2//Last)},{(\[Phi]1'+I w (1+\[Phi]1)//Last),(\[Phi]2'-I w (1+\[Phi]2)//Last)}}
];


HillKdV[F_,n_]:=Module[{c2,c1,c0,f2,f1,f0,t,A,mu,L,P,fun},
mu = 0.;
L = Pi;
P =1;
f2[x_]:= 4*Cos[x/2]^4;
f1[x_]:= -4*Cos[x/2]^3*Sin[x/2];
t[x_] := Tan[x/2];
f0[x_]:= F[t[x]];
fun= {{{f0,f1,f2}}};
A= Hill[mu,L,n,P,fun];
Eigensystem[Chop[A,$MachineEpsilon]]
];
LocatePolesKdV[F_,n_]:=Module[{eval,s,i,sys,vecs},
sys=HillKdV[F,n];
eval=sys[[1]];
s = {};
vecs={};
For[i=1,i<=2*n+1,i++,
If[Re[eval[[i]]]>10^(-6),
s=Join[s,{eval[[i]]//Re}];
vecs= Join[vecs,{sys[[2,i]]}];
];
];
Sqrt[-s//Chop]
];
Residues[f_,k_,x_]:=Module[{qf,qfb,\[Phi]2,\[Phi]b1,\[Phi]b2,Dm,Dm2,Dmb,Dmb2,P,Pb,\[Phi]2p,\[Phi]2m,l,r,b,i},
l = Length[k];
r = ConstantArray[0,l];
qf=Fun[f,Line[{-\[Infinity],x}],10];
qfb=Fun[f,Line[{x,\[Infinity]}],10];
Dm=DerivativeMatrix[qf];
Dm2=Dm.Dm;
Dmb=DerivativeMatrix[qfb];
Dmb2=Dmb.Dmb;
P=AddBasisElement[Dm2+DiagonalMatrix[Values[qf ]],1];
Pb=AddBasisElement[Dmb2+DiagonalMatrix[Values[qfb ]],-1,-1];
For[i=1,i<=l,i++,
\[Phi]2=IFun[LeastSquares[P-2 I k[[i]] Dm,-Chop[Values[qf],$MachineTolerance]],qf//Domain];
\[Phi]b1=IFun[LeastSquares[Pb+2 I k[[i]] Dmb,-Chop[Values[qfb],$MachineTolerance]],qfb//Domain];
b = (1 + (\[Phi]2 //Last))Exp[-2I k[[i]]x]/(1+(\[Phi]b1 //First));
\[Phi]2m=IFun[((1+\[Phi]2//Values)Exp[-I*k[[i]] (\[Phi]2//Points)])^2,qf//Domain];
\[Phi]2p=IFun[(b*(1+\[Phi]b1//Values)Exp[I*k[[i]] (\[Phi]b1//Points)])^2,qfb//Domain];
r[[i]]=I b^2/(DomainIntegrate[\[Phi]2p]+DomainIntegrate[\[Phi]2m]);
];
r
];


\[Theta][x_,t_][z_]:=2 I (4 t z^3+x z);
rb[k_]:=\[Lambda] cc[r[cc[k]]];
rbsamp[k_]:=\[Lambda] cc[rsamp[cc[k]]];
\[Tau]samp[k_]:=1+\[Lambda] rsamp[k]cc[rsamp[cc[k]]];

L[x_,t_][k_]:=({
 {1, 0},
 {r[k]/\[Tau][k] Exp[\[Theta][x,t][k]], 1}
});
Lsamp[x_,t_][k_]:=({
 {1, 0},
 {rsamp[k]/\[Tau]samp[k] Exp[\[Theta][x,t][k]], 1}
});

Lin[x_,t_][k_]:=({
 {1, 0},
 {-(r[k]/\[Tau][k])Exp[\[Theta][x,t][k]], 1}
});
Linsamp[x_,t_][k_]:=({
 {1, 0},
 {-(rsamp[k]/\[Tau]samp[k])Exp[\[Theta][x,t][k]], 1}
});


U[x_,t_][k_]:=({
 {1, rb[k]/\[Tau][k] Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
Uin[x_,t_][k_]:=({
 {1, -(rb[k]/\[Tau][k])Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
Usamp[x_,t_][k_]:=({
 {1, rbsamp[k]/\[Tau]samp[k] Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
Uinsamp[x_,t_][k_]:=({
 {1, -(rbsamp[k]/\[Tau]samp[k])Exp[-\[Theta][x,t][k]]},
 {0, 1}
});

DD[x_,t_][k_]:=({
 {\[Tau][k], 0},
 {0, 1/\[Tau][k]}
});
DDin[x_,t_][k_]:=({
 {1/\[Tau][k], 0},
 {0, \[Tau][k]}
});

DDsamp[x_,t_][k_]:=({
 {\[Tau]samp[k], 0},
 {0, 1/\[Tau]samp[k]}
});
DDinsamp[x_,t_][k_]:=({
 {1/\[Tau]samp[k], 0},
 {0, \[Tau]samp[k]}
});

G[x_,t_][z_]:=({
 {1+r[z]rb[z], rb[z]Exp[-2 I (4 t z^3+x z)]},
 {r[z] Exp[2 I (4t z^3+ x z)], 1}
});
G[_,_][_?InfinityQ]:=({
 {1., 0},
 {0, 1.}
});
Gsamp[x_,t_][z_]:=({
 {1+rsamp[z]rbsamp[z], rbsamp[z]Exp[-2 I (2 t z^2+x z)]},
 {rsamp[z] Exp[2 I (2 t z^2+ x z)], 1}
});
Gsamp[_,_][_?InfinityQ]:=({
 {1., 0},
 {0, 1.}
});
M[x_,t_][k_]:=({
 {1, rb[k] Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
Msamp[x_,t_][k_]:=({
 {1, rbsamp[k] Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
Minv[x_,t_][k_]:=({
 {1, -rb[k] Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
Minvsamp[x_,t_][k_]:=({
 {1, -rbsamp[k] Exp[-\[Theta][x,t][k]]},
 {0, 1}
});
P[x_,t_][k_]:=({
 {1, 0},
 {r[k] Exp[\[Theta][x,t][k]], 1}
});
Pin[x_,t_][k_]:=({
 {1, 0},
 {-r[k] Exp[\[Theta][x,t][k]], 1}
});
Psamp[x_,t_][k_]:=({
 {1, 0},
 {rsamp[k] Exp[\[Theta][x,t][k]], 1}
});
Pinsamp[x_,t_][k_]:=({
 {1, 0},
 {-rsamp[k] Exp[\[Theta][x,t][k]], 1}
});


qq[x_,t_][k_]:=Module[{out,i},
out = 1;
For[i=1,i<=Length[A],i++,
If[Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]>expconst,
out = out*(k-A[[i]])/(k-Conjugate[A[[i]]]);
];
];
out];
Q[x_,t_][k_]:=({
 {qq[x,t][k], 0},
 {0, 1/qq[x,t][k]}
});
Qin[x_,t_][k_]:=({
 {1/qq[x,t][k], 0},
 {0, qq[x,t][k]}
});
Q[x_,t_][_?InfinityQ]:=({
 {1., 0},
 {0, 1.}
});
LogIntVariable[s_,k0_,z_]:=-2 (-Log[k0] Log[1-k0/(z+s 10.^(-30) I)]+Log[k0] Log[(k0+z+s 10.^(-30) I)/(z+s 10.^(-30) I)]+PolyLog[2,-(k0/(z+s 10.^(-30) I))]-PolyLog[2,k0/(z+s 10.^(-30) I)])/(2Pi I);
LogIntVariable[k0_,z_]:=LogIntVariable[0.,k0,z];
startift[]:=Module[{const,eps},
LL=dom[[1,2]];
eps = $MachineEpsilon;
If[singflag,
Clear[ift,ifl,ifr,\[Delta]t];
const=1/2;
ift[k0_]:=ift[k0]=Fun[Log[\[Tau][#]/Abs[#]^2]&,{-Min[k0,LL],Min[k0,LL]}//Line,2*smallN];(* must have even number of grid points*)
ifl[k0_]:=ifl[k0]=Fun[Log[\[Tau][#]]&,{-Min[k0,LL],-const}//Line,bigN];
ifr[k0_]:=ifr[k0]=Fun[Log[\[Tau][#]]&,{const,Min[k0,LL]}//Line,bigN];
\[Delta]t[x_,t_][s_,k_]:=Module[{out},If[Abs[K0[x,t]]<=const,
out=(LogIntVariable[Min[Abs[K0[x,t]],LL],k+s I eps]+Cauchy[ift[Abs[K0[x,t]]],k +s I eps]//Exp);,
out=(LogIntVariable[const,k]+Cauchy[s,{ift[const],ifl[Abs[K0[x,t]]],ifr[Abs[K0[x,t]]]},k ]//Exp);
];
out
];
\[Delta]t[x_,t_][k_]:=\[Delta]t[x,t][k]=Module[{out},If[Abs[K0[x,t]]<=const,
out=(LogIntVariable[Min[Abs[K0[x,t]],LL],k]+Cauchy[ift[Abs[K0[x,t]]],k ]//Exp);,
out=(LogIntVariable[const,k]+Cauchy[{ift[const],ifl[Abs[K0[x,t]]],ifr[Abs[K0[x,t]]]},k ]//Exp);
];
out
];
,
Clear[ift,\[Delta]t];
ift[k0_]:=ift[k0]=Fun[Log[\[Tau][#]]&,{-Min[k0,LL],Min[k0,LL]}//Line,100];
\[Delta]t[x_,t_][s_,k_]:=(Cauchy[s,ift[Abs[K0[x,t]]],k]//Exp);
\[Delta]t[x_,t_][k_]:=\[Delta]t[x,t][k]=(Cauchy[ift[Abs[K0[x,t]]],k]//Exp);
];
];

\[CapitalPhi]t[x_,t_][z__]:=({
 {\[Delta]t[x,t][z], 0},
 {0, 1/\[Delta]t[x,t][z]}
});
\[CapitalPhi]tin[x_,t_][z__]:=({
 {1/\[Delta]t[x,t][z], 0},
 {0, \[Delta]t[x,t][z]}
});
K0[x_,t_]:=Sqrt[-x/(12 t)];
K0[_,t_?ZeroQ]:=\[Infinity];


\[Theta]x[x_,t_][z_]:=2 I z;

Lx[x_,t_][k_]:=({
 {0, 0},
 {r[k]/\[Tau][k] \[Theta]x[x,t][k]Exp[\[Theta][x,t][k]], 0}
});

Linx[x_,t_][k_]:=({
 {0, 0},
 {-(r[k]/\[Tau][k])\[Theta]x[x,t][k]Exp[\[Theta][x,t][k]], 0}
});


Ux[x_,t_][k_]:=({
 {0, -\[Theta]x[x,t][k] rb[k]/\[Tau][k] Exp[-\[Theta][x,t][k]]},
 {0, 0}
});
Uinx[x_,t_][k_]:=({
 {0, \[Theta]x[x,t][k] rb[k]/\[Tau][k] Exp[-\[Theta][x,t][k]]},
 {0, 0}
});

Gx[x_,t_][z_]:=({
 {0, -\[Theta]x[x,t][z]rb[z]Exp[-2 I (4 t z^3+x z)]},
 {\[Theta]x[x,t][z]r[z] Exp[2 I (4t z^3+ x z)], 0}
});
Mx[x_,t_][k_]:=({
 {0, -\[Theta]x[x,t][k]rb[k] Exp[-\[Theta][x,t][k]]},
 {0, 0}
});
Minvx[x_,t_][k_]:=({
 {0, \[Theta]x[x,t][k]rb[k] Exp[-\[Theta][x,t][k]]},
 {0, 0}
});
Px[x_,t_][k_]:=({
 {0, 0},
 {\[Theta]x[x,t][k]r[k] Exp[\[Theta][x,t][k]], 0}
});
Pinx[x_,t_][k_]:=({
 {0, 0},
 {-\[Theta]x[x,t][k]r[k] Exp[\[Theta][x,t][k]], 0}
});


Ls[x_,t_][k_]:=L[x,t][K0[x,t]k];
Lsamps[x_,t_][k_]:=Lsamp[x,t][K0[x,t]k];
Lins[x_,t_][k_]:=Lin[x,t][K0[x,t]k];
Linsamps[x_,t_][k_]:=Linsamp[x,t][K0[x,t]k];
Us[x_,t_][k_]:=U[x,t][K0[x,t]k];
Uins[x_,t_][k_]:=Uin[x,t][K0[x,t]k];
Usamps[x_,t_][k_]:=Usamp[x,t][K0[x,t]k];
Uinsamps[x_,t_][k_]:=Uinsamp[x,t][K0[x,t]k];
DDs[x_,t_][k_]:=DD[x,t][K0[x,t]k];
DDins[x_,t_][k_]:=DDin[x,t][K0[x,t]k];
DDsampss[x_,t_][k_]:=DDsamp[x,t][K0[x,t]k];
DDinsamps[x_,t_][k_]:=DDinsamp[x,t][K0[x,t]k];Gs[x_,t_][k_]:=G[x,t][K0[x,t]k];
Gsamps[x_,t_][k_]:=Gsamp[x,t][K0[x,t]k];
Ms[x_,t_][k_]:=M[x,t][K0[x,t]k];
Msamps[x_,t_][k_]:=Msamp[x,t][K0[x,t]k];
Minvs[x_,t_][k_]:=Minv[x,t][K0[x,t]k];
Minvsamps[x_,t_][k_]:=Minvsamp[x,t][K0[x,t]k];
Ps[x_,t_][k_]:=P[x,t][K0[x,t]k];
Psamps[x_,t_][k_]:=Psamp[x,t][K0[x,t]k];
Pins[x_,t_][k_]:=Pin[x,t][K0[x,t]k];
Pinsamps[x_,t_][k_]:=Pinsamp[x,t][K0[x,t]k];
Qs[x_,t_][k_]:=Q[x,t][K0[x,t]k];
\[CapitalPhi]ts[x_,t_][k_]:=\[CapitalPhi]t[x,t][K0[x,t]k];
\[CapitalPhi]tins[x_,t_][k_]:=\[CapitalPhi]tin[x,t][K0[x,t]k];


Lsx[x_,t_][k_]:=Lx[x,t][K0[x,t]k];
Linsx[x_,t_][k_]:=Linx[x,t][K0[x,t]k];
Usx[x_,t_][k_]:=Ux[x,t][K0[x,t]k];
Uinsx[x_,t_][k_]:=Uinx[x,t][K0[x,t]k];
Gsx[x_,t_][k_]:=Gx[x,t][K0[x,t]k];
Msx[x_,t_][k_]:=Mx[x,t][K0[x,t]k];
Minvsx[x_,t_][k_]:=Minvx[x,t][K0[x,t]k];
Psx[x_,t_][k_]:=Px[x,t][K0[x,t]k];
Pinsx[x_,t_][k_]:=Pinx[x,t][K0[x,t]k];


J[0][x_,t_]:={{G[x,t][#]&,G[x,t][#]&},{Line[{-el,0}],Line[{0,el}]},{2*bigN,2*bigN}};
Jx[0][x_,t_]:={{Gx[x,t][#]&,Gx[x,t][#]&},J[0][x,t][[2]],J[0][x,t][[3]]};
Jsamp[0][x_,t_]:={{Gsamp[x,t][#]&,Gsamp[x,t][#]&},{Line[{-el,0}],Line[{0,el}]},{2*bigN,2*bigN}};
Jadapt[0][x_,t_]:=Adapt[Jsamp[0][x,t],globalTol][J[0][x,t]]
Jadaptx[0][x_,t_]:=Adapt[Jsamp[0][x,t],globalTol][Jx[0][x,t]]


c1[x_,t_]:=If[\[Nu]-Abs[K0[x,t]]>0 && x >= 0,
{Line[{-el+I \[Nu],Sqrt[2]Exp[3I Pi/4](\[Nu]-Abs[K0[x,t]]) + I Abs[K0[x,t]]}],
Line[{Sqrt[2]Exp[3I Pi/4]Abs[\[Nu]-Abs[K0[x,t]]] + I Abs[K0[x,t]],I Abs[K0[x,t]]}],
Line[{I Abs[K0[x,t]],Sqrt[2]Exp[I Pi/4]Abs[\[Nu]-Abs[K0[x,t]]] + I Abs[K0[x,t]]}],Line[{Sqrt[2]Exp[I Pi/4]Abs[\[Nu]-Abs[K0[x,t]]] + I Abs[K0[x,t]],el+I \[Nu]}]},
{Line[{-el+I \[Nu],I \[Nu]}],Line[{I \[Nu],I \[Nu] + el}]}
];
J[1][x_,t_]:=If[Abs[K0[x,t]]<\[Infinity],{Join[Table[P[x,t][#]&,{i,1,Length[c1[x,t]]}],Table[M[x,t][#]&,{i,1,Length[c1[x,t]]}]],
Join[c1[x,t],c1[x,t]//LineConjugate],
Table[bigN,{i,1,2*Length[c1[x,t]]}]},
{{P[x,t][#]&,P[x,t][#]&,M[x,t][#]&,M[x,t][#]&},{Line[{-el ,0}+I \[Nu]],Line[{0,el}+I \[Nu]],Line[{-el ,0}-I \[Nu]],Line[{0 ,el}-I \[Nu]]},{bigN,bigN,bigN,bigN}}
];
Jx[1][x_,t_]:=Module[{Jumps,Domains,NumPts},Jumps=If[Abs[K0[x,t]]<\[Infinity],Join[Table[Px[x,t][#]&,{i,1,Length[c1[x,t]]}],Table[Mx[x,t][#]&,{i,1,Length[c1[x,t]]}]],
{Px[x,t][#]&,Px[x,t][#]&,Mx[x,t][#]&,Mx[x,t][#]&}
];
Domains=J[1][x,t][[2]];
NumPts=J[1][x,t][[3]];
{Jumps,Domains,NumPts}
];
Jsamp[1][x_,t_]:=
If[Abs[K0[x,t]]<\[Infinity],{Join[Table[Psamp[x,t][#]&,{i,1,Length[c1[x,t]]}],Table[Msamp[x,t][#]&,{i,1,Length[c1[x,t]]}]],
Join[c1[x,t],c1[x,t]//LineConjugate],
Table[bigN,{i,1,2*Length[c1[x,t]]}]},
{{Psamp[x,t][#]&,Psamp[x,t][#]&,Msamp[x,t][#]&,Msamp[x,t][#]&},{Line[{-el ,0}+I \[Nu]],Line[{0,el}+I \[Nu]],Line[{-el ,0}-I \[Nu]],Line[{0 ,el}-I \[Nu]]},{bigN,bigN,bigN,bigN}}
];
Jadapt[1][x_,t_]:=Adapt[Jsamp[1][x,t],globalTol][J[1][x,t]]
Jadaptx[1][x_,t_]:=Adapt[Jsamp[1][x,t],globalTol][Jx[1][x,t]]


c2[x_,t_]:={
Line[{-el+I \[Nu],Sqrt[2]Exp[3Pi/4I]\[Nu]-Abs[K0[x,t]]}],Line[{Sqrt[2]Exp[3Pi/4I]\[Nu]-Abs[K0[x,t]],-Abs[K0[x,t]]}],
Line[{-Abs[K0[x,t]],Abs[K0[x,t]]}],
Line[{Abs[K0[x,t]],Sqrt[2]Exp[1Pi/4I]\[Nu]+Abs[K0[x,t]]}],
Line[{Sqrt[2]Exp[1Pi/4I]\[Nu]+Abs[K0[x,t]],I \[Nu] + el}],
Line[{-el-I \[Nu],Sqrt[2]Exp[5Pi/4I]\[Nu]-Abs[K0[x,t]]}],Line[{Sqrt[2]Exp[5Pi/4I]\[Nu]-Abs[K0[x,t]],-Abs[K0[x,t]]}],Line[{Abs[K0[x,t]],Sqrt[2]Exp[-1Pi/4I]\[Nu]+Abs[K0[x,t]]}],
Line[{Sqrt[2]Exp[-1Pi/4I]\[Nu]+Abs[K0[x,t]],-I \[Nu] + el}]
};
J[2.5][x_,t_]:={{P[x,t][#]&,P[x,t][#]&,G[x,t][#]&,P[x,t][#]&,P[x,t][#]&,M[x,t][#]&,M[x,t][#]&,M[x,t][#]&,M[x,t][#]&},
c2[x,t],
Table[smallN,{i,1,Length[c2[x,t]]}]};
Jx[2.5][x_,t_]:={{Px[x,t][#]&,Px[x,t][#]&,Gx[x,t][#]&,Px[x,t][#]&,Px[x,t][#]&,Mx[x,t][#]&,Mx[x,t][#]&,Mx[x,t][#]&,Mx[x,t][#]&},J[2.5][x,t][[2]],J[2.5][x,t][[3]]};
Jsamp[2.5][x_,t_]:={{Psamp[x,t][#]&,Psamp[x,t][#]&,Gsamp[x,t][#]&,Psamp[x,t][#]&,Psamp[x,t][#]&,Msamp[x,t][#]&,Msamp[x,t][#]&,Msamp[x,t][#]&,Msamp[x,t][#]&},
c2[x,t],
Table[smallN,{i,1,Length[c2[x,t]]}]};
Jadapt[2.5][x_,t_]:=Adapt[Jsamp[2.5][x,t],globalTol][J[2.5][x,t]];
Jadaptx[2.5][x_,t_]:=Adapt[Jsamp[2.5][x,t],globalTol][Jx[2.5][x,t]]


(*Valid for |K0| > \[Nu]*)
if[t_]:=.25/(1+Sqrt[t]);
rays[x_,t_]:= {Line[{Exp[I 3 Pi /4],if[t] Exp[I 3 Pi /4]}],Line[{Exp[I 5Pi /4],if[t] Exp[I 5 Pi /4]}],Line[{if[t] Exp[-I Pi /4], Exp[-I Pi /4]}],Line[{if[t] Exp[I Pi /4],Exp[I Pi /4]}]}*\[Nu];
square[x_,t_]:={Line[{Exp[I 3 Pi /4],Exp[I 5 Pi /4]}],Line[{Exp[I 5 Pi /4],Exp[I 7Pi /4]}],Line[{Exp[I 7 Pi /4],Exp[I Pi /4]}],Line[{Exp[I Pi /4],Exp[I 3Pi /4]}]}*if[t] \[Nu];
stencil[x_,t_]:= Join[rays[x,t],square[x,t]]*Sqrt[2];
extendL = {Line[{-el + I \[Nu],Sqrt[2]Exp[3 Pi/4I] \[Nu]}],
Line[{-el - I \[Nu],Sqrt[2]Exp[5Pi/4I] \[Nu]}]};
extendR= {Line[{Sqrt[2]Exp[Pi/4I] \[Nu], el + I \[Nu]}],
Line[{Sqrt[2]Exp[-Pi/4I] \[Nu],el- I \[Nu]}]};
connect[x_,t_]:= {Line[{-Abs[K0[x,t]] + Sqrt[2]\[Nu] Exp[I Pi/4],Abs[K0[x,t]] + Sqrt[2]\[Nu] Exp[3I Pi/4]}],Line[{-Abs[K0[x,t]] + Sqrt[2]\[Nu] Exp[-I Pi/4],Abs[K0[x,t]] + Sqrt[2]\[Nu] Exp[-3I Pi/4]}]};
ctr[x_,t_]:=Join[extendL-K0[x,t],stencil[x,t] - K0[x,t],connect[x,t],stencil[x,t]+K0[x,t],extendR + K0[x,t]];
DDI[x_,t_][k_]:=If[Im[k] >=0,DD[x,t][k],IdentityMatrix[2]];
DDIin[x_,t_][k_]:=If[Im[k] >=0,DDin[x,t][k],IdentityMatrix[2]];
DDIx[x_,t_][k_]:={{0,0},{0,0}};
DDIinx[x_,t_][k_]:={{0,0},{0,0}};

DDIsamp[x_,t_][k_]:=If[Im[k] >=0,DDsamp[x,t][k],IdentityMatrix[2]];
DDIinsamp[x_,t_][k_]:=If[Im[k] >=0,DDinsamp[x,t][k],IdentityMatrix[2]];
J[3.3][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&};Domains={Line[{-el ,0}+I \[Nu]],Line[{0,el}+I \[Nu]],Line[{-el ,0}-I \[Nu]],Line[{0 ,el}-I \[Nu]]};
NumPts={bigN,bigN,bigN,bigN};
{Jumps,Domains,NumPts}
];
Jsamp[3.3][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
Usamp[x,t][#]&,
Usamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&
};
Domains={Line[{-el ,0}+I \[Nu]],Line[{0,el}+I \[Nu]],Line[{-el ,0}-I \[Nu]],Line[{0 ,el}-I \[Nu]]};
NumPts={bigN,bigN,bigN,bigN};
{Jumps,Domains,NumPts}
];
Jx[3.3][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&};
{Jumps,J[3.3][x,t][[2]],J[3.3][x,t][[3]]}
];

J[3.2][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end extendL*)
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays L*)
\[CapitalPhi]t[x,t][#].Minv[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].DDIin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uin[x,t][#].DDin[x,t][#]&,(*end square L*)
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&, (*end connect*)
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays R*)
\[CapitalPhi]t[x,t][#].DDIin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].Minv[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uin[x,t][#].DDin[x,t][#]&,(*end square L*)
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&(*end extendR*)
};
Domains = ctr[x,t];
NumPts = Table[smallN,{i,1,Length[Domains]}];
{Jumps,Domains,NumPts}
];
Jsamp[3.2][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
Psamp[x,t][#]&,
Msamp[x,t][#]&,(*end extendL*)
Psamp[x,t][#]&,
Msamp[x,t][#]&,
Lsamp[x,t][#]&,
Usamp[x,t][#]&,(*end rays L*)
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,(*end square L*)
Usamp[x,t][#]&,
Lsamp[x,t][#]&, (*end connect*)
Usamp[x,t][#]&,
Lsamp[x,t][#]&,
Msamp[x,t][#]&,
Psamp[x,t][#]&,(*end rays R*)
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,(*end square L*)
Psamp[x,t][#]&,
Msamp[x,t][#]&(*end extendR*)
};
Domains = ctr[x,t];
NumPts = Table[smallN,{i,1,Length[Domains]}];
{Jumps,Domains,NumPts}
];
Jx[3.2][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end extendL*)
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays L*)
\[CapitalPhi]t[x,t][#].Minvx[x,t][#].L[x,t][#]+\[CapitalPhi]t[x,t][#].Minv[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].DDIinx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uinx[x,t][#].DDin[x,t][#]&,(*end square L*)
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&, (*end connect*)
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays R*)
\[CapitalPhi]t[x,t][#].DDIinx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Minvx[x,t][#].L[x,t][#]+\[CapitalPhi]t[x,t][#].Minv[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uinx[x,t][#].DDin[x,t][#]&,(*end square L*)
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&(*end extendR*)
};
{Jumps,J[3.2][x,t][[2]],J[3.2][x,t][[3]]}
];


Jadapt[3.2][x_,t_]:=Adapt[Jsamp[3.2][x,t],globalTol][J[3.2][x,t]];


(*Valid if |K0|< \[Nu]*)
skewrays[x_,t_]:= {Line[{Exp[I 3 Pi /4],if[t] Exp[I 3 Pi /4]}],Line[{Exp[I 5Pi /4],if[t] Exp[I 5 Pi /4]}],Line[{if[t] Exp[-I Pi /4],Abs[K0[x,t]]/\[Nu] Exp[-I Pi /4]}],Line[{if[t] Exp[I Pi /4],Abs[K0[x,t]]/\[Nu] Exp[I Pi /4]}]}*\[Nu];
stencilskewL[x_,t_]:= Join[skewrays[x,t],square[x,t]]*Sqrt[2];
stencilskewR[x_,t_]:= Join[-skewrays[x,t]//LineReverse,square[x,t]]*Sqrt[2];
ctrskew[x_,t_]:=Join[extendL-K0[x,t],stencilskewL[x,t] - K0[x,t],stencilskewR[x,t]+K0[x,t],extendR + K0[x,t]];
J[3.1][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end extendL*)
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays L*)
\[CapitalPhi]t[x,t][#].Minv[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].DDIin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uin[x,t][#].DDin[x,t][#]&,(*end square L*)
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].U[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays R with rotation*)
\[CapitalPhi]t[x,t][#].DDIin[x,t][#]&,
\[CapitalPhi]t[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].Minv[x,t][#].L[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uin[x,t][#].DDin[x,t][#]&,(*end square R*)
\[CapitalPhi]t[x,t][#].P[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].M[x,t][#].\[CapitalPhi]tin[x,t][#]&(*end extendR*)
};
Domains = ctrskew[x,t];
NumPts = Table[smallN,{i,1,Length[Domains]}];
{Jumps,Domains,NumPts}
];
Jsamp[3.1][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
Psamp[x,t][#]&,
Msamp[x,t][#]&,(*end extendL*)
Psamp[x,t][#]&,
Msamp[x,t][#]&,
Lsamp[x,t][#]&,
Usamp[x,t][#]&,(*end rays L*)
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,(*end square L*)
Msamp[x,t][#]&,
Psamp[x,t][#]&,
Usamp[x,t][#]&,
Lsamp[x,t][#]&,(*end rays R*)
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,
Lsamp[x,t][#]&,(*end square L*)
Psamp[x,t][#]&,
Msamp[x,t][#]&(*end extendR*)
};
Domains = ctrskew[x,t];
NumPts = Table[smallN,{i,1,Length[Domains]}];
{Jumps,Domains,NumPts}
];
Jx[3.1][x_,t_]:=Module[{Jumps,Domains,NumPts},
Jumps={
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end extendL*)
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays L*)
\[CapitalPhi]t[x,t][#].Minvx[x,t][#].L[x,t][#]+\[CapitalPhi]t[x,t][#].Minv[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].DDIinx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uinx[x,t][#].DDin[x,t][#]&,(*end square L*)
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Ux[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#].\[CapitalPhi]tin[x,t][#]&,(*end rays R with rotation*)
\[CapitalPhi]t[x,t][#].DDIinx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Minvx[x,t][#].L[x,t][#]+\[CapitalPhi]t[x,t][#].Minv[x,t][#].Lx[x,t][#]&,
\[CapitalPhi]t[x,t][#].Uinx[x,t][#].DDin[x,t][#]&,(*end square R*)
\[CapitalPhi]t[x,t][#].Px[x,t][#].\[CapitalPhi]tin[x,t][#]&,
\[CapitalPhi]t[x,t][#].Mx[x,t][#].\[CapitalPhi]tin[x,t][#]&(*end extendR*)
};
{Jumps,J[3.1][x,t][[2]],J[3.1][x,t][[3]]}
];


Jadapt[3.1][x_,t_]:=Adapt[Jsamp[3.1][x,t],globalTol][J[3.1][x,t]];

J[3][x_,t_]:=\[Piecewise]{
 {J[3.2][x,t], el>Abs[K0[x,t]]>\[Nu]},
 {J[3.1][x,t], Abs[K0[x,t]]<=\[Nu]},
 {J[3.3][x,t], True}
};
Jx[3][x_,t_]:=\[Piecewise]{
 {Jx[3.2][x,t], el>Abs[K0[x,t]]>\[Nu]},
 {Jx[3.1][x,t], Abs[K0[x,t]]<=\[Nu]},
 {Jx[3.3][x,t], True}
};
Jsamp[3][x_,t_]:=\[Piecewise]{
 {Jsamp[3.2][x,t], el>Abs[K0[x,t]]>\[Nu]},
 {Jsamp[3.1][x,t], Abs[K0[x,t]]<=\[Nu]},
 {Jsamp[3.3][x,t], True}
};
Jadapt[3][x_,t_]:=Adapt[Jsamp[3][x,t],globalTol][J[3][x,t]];
Jadaptx[3][x_,t_]:=Adapt[Jsamp[3][x,t],globalTol][Jx[3][x,t]];



a//Clear;anew//Clear;
K0[x_,t_]:=Sqrt[-x/(12t)];
mNewtonMethod[f_,fp_,x0_]:=Module[{ret},
	ret[0]=x0;
	ret[n_]:=ret[n]=ret[n-1]-f[ret[n-1]]/fp[ret[n-1]];
ret];
mNewtonMethod[f_,x0_]:=mNewtonMethod[f,f',x0];mFFT[F_]:=Fourier[F,FourierParameters->{-1,-1}];
InvmFFT[F_]:=InverseFourier[F,FourierParameters->{-1,1}];
FFTShift[V_]:=Module[{n},
n = Length[V]/2;
Join[V[[n+1;;]],V[[1;;n]]]];
ToCosineSeries[L_]:= Module[{c,l,m},
l = Length[L];
If[Mod[l,2]==1,
m = (l-1)/2;
c = ConstantArray[0.,m+1];
c = L[[1;;m+1]];
c[[2;;]]=2*c[[2;;]];,
m = l/2;
c = ConstantArray[0.,m+1];
c = L[[1;;m+2]];
c [[2;;-2]]=2*c[[2;;-2]];];
c];
mDCT[L_]:=mFFT[Join[L,Reverse[L[[2;;-2]]]]//FFTShift]//ToCosineSeries;
ChebPts[n_]:=Cos[Table[1.0*Pi*i/(n-1),{i,0,n-1}]]//Reverse;
Tn2Un[n_]:= Module[{out},
If[n==0,out = {1};,
out=Table[2*Mod[i+n+1,2],{i,0,n}];
out[[1]]=out[[1]]/2;];
out];
Tn2UnMat[n_]:=Table[Join[Tn2Un[i],ConstantArray[0.,n-1-i]],{i,0,n-1}];
Un2TnCoef[n_]:=Transpose[Tn2UnMat[n]];
sp[a_,b_][x_]:=(b-a)/2 x + (b+a)/2;
ef[a_,b_][x_]:=Sqrt[(sp[a,b][x]+a)(sp[a,b][x]+b)(1/4)(a-b)^2];
anew//Clear;
EllipInt[a_,b_,n_]:=LinearSolve[Un2TnCoef[n+1],mDCT[ef[a,b][ChebPts[n]]]][[1]]*(b-a)/2 * Pi/2;
ZeroFunction[s_,c_,n_]:=Module[{F},
F[A_]:=s -24*EllipInt[A,Sqrt[c-A^2],n];
F];
ZeroFun[s_,c_,n_]:=Fun[ZeroFunction[s,c,n][#]&,Line[{0,Sqrt[c/2]}],n];
Finda[s_,c_,n_]:= mNewtonMethod[ZeroFun[s,c,n],Sqrt[c/2]/2];
aNewton[s_]:=aNewton[s]=Finda[s,2,20][50]//Re;
ESTZ[x_]:=If[x=={},{0},x];
a[s_]:=a[s]=ZeroFun[s,2,20]//Roots//ESTZ//#[[1]]&;
b[s_]:=Sqrt[2-a[s]^2];
ComposeFunction[X_,T_]:=X[T[#]]&;
tau[x_,t_]:=t K0[x,t]^3;
s[x_,t_]:=-Log[K0[x,t]^2]/tau[x,t];
b[s_]:= Sqrt[2-a[s]^2];


\[Theta]p[k_,x_,t_]:=2I x K0[x,t] + 24 I k^2*K0[x,t]^3* t;
ci//Clear;
ci[xx_,tt_]:=ci[xx,tt]=(Fun[-\[Theta]p[#,xx,tt]&,{Line[{-b[s[xx,tt]],-a[s[xx,tt]]}],Line[{a[s[xx,tt]],b[s[xx,tt]]}]},{30,30}]//CauchyInverseCurves);
CSGFUN[]:=Module[{},
gfun//Clear;
gfun[p_,z_,xx_,tt_]:=gfun[p,z,xx,tt]=CauchyInverseIntegral[p,#,z]&/@ci[xx,tt]//Total;
];
gfunsamp[p_,z_,xx_,tt_]:=If[Abs[z]<4,.1Abs[tau[xx,tt]]Sign[Im[z]],0];

\[Phi][-1][x_,t_][k_]:=({
 {Exp[gfun[-1,k,x,t]], 0},
 {0, Exp[-gfun[-1,k,x,t]]}
});
\[Phi][+1][x_,t_][k_]:=({
 {Exp[gfun[1,k,x,t]], 0},
 {0, Exp[-gfun[1,k,x,t]]}
});
\[Phi]samp[-1][x_,t_][k_]:=({
 {Exp[gfunsamp[-1,k,x,t]], 0},
 {0, Exp[-gfunsamp[-1,k,x,t]]}
});
\[Phi]samp[+1][x_,t_][k_]:=({
 {Exp[gfunsamp[1,k,x,t]], 0},
 {0, Exp[-gfunsamp[1,k,x,t]]}
});

Generate\[Delta]cs[x_,t_]:=Module[{k0,const,eps},
\[Delta]cs//Clear;
if1cs//Clear;
eps=10^(-14);
k0 = a[s[x,t]];
if1cs=IFun[Log[\[Tau][#*K0[x,t]]]-Log[Abs[#]^2]&,Line[{-k0,k0}],80];
\[Delta]cs[k_?(NZeroQ[Im[#]]&&-k0<=Re[#]<=k0&),s_]:=\[Delta]cs[k,s]=
(LogIntVariable[k0,k+s I eps]+Cauchy[s,if1cs,k +s I eps]//Exp);
\[Delta]cs[k_,s_]:=\[Delta]cs[k,s]=
(LogIntVariable[k0,k+s I eps]+Cauchy[if1cs,k ]//Exp);

\[Delta]csk//Clear;
if1csk//Clear;
if1csk=IFun[Log[\[Tau][#*K0[x,t]]/Abs[#*K0[x,t]]^2]&,Line[{-k0,k0}],80];
\[Delta]csk[k_?(NZeroQ[Im[#]]&&-k0<=Re[#]<=k0&),s_]:=\[Delta]csk[k,s]=
(LogIntVariable[k0,k+s I eps]+Cauchy[s,if1csk,k +s I eps]//Exp);
\[Delta]csk[k_,s_]:=\[Delta]csk[k,s]=
(LogIntVariable[k0,k+s I eps]+Cauchy[if1csk,k ]//Exp);
];
Generate\[Zeta][x_,t_]:=Module[{eps},
eps = $MachineEpsilon*10;
\[Zeta]//Clear;
glim1 = Fun[(gfun[1,#+I eps,x,t]-gfun[-1,#-I eps,x,t])+Log[\[Tau][#*K0[x,t]]]&,Line[{-b[s[x,t]],-a[s[x,t]]}],150];
glim2 = Fun[(gfun[1,#+I eps,x,t]-gfun[-1,#-I eps,x,t])+Log[\[Tau][#*K0[x,t]]]&,Line[{a[s[x,t]],b[s[x,t]]}],150];
\[Zeta][+1][-1][k_]:=\[Zeta][+1][-1][k]=Cauchy[glim1,k+I eps]//Exp;
\[Zeta][-1][-1][k_]:=\[Zeta][-1][-1][k]=Cauchy[glim1,k-I eps]//Exp;
\[Zeta][+1][+1][k_]:=\[Zeta][+1][+1][k]=Cauchy[glim2,k+I eps]//Exp;
\[Zeta][-1][+1][k_]:=\[Zeta][-1][+1][k]=Cauchy[glim2,k-I eps]//Exp;

w//Clear;
glim1w = Fun[(gfun[1,#+I eps,x,t]-gfun[-1,#-I eps,x,t])&,Line[{-b[s[x,t]],-a[s[x,t]]}],50];
glim2w = Fun[(gfun[1,#+I eps,x,t]-gfun[-1,#-I eps,x,t])&,Line[{a[s[x,t]],b[s[x,t]]}],50];
w[+1][-1][k_]:=w[+1][-1][k]=Cauchy[glim1w,k+I eps]//Exp;
w[-1][-1][k_]:=w[-1][-1][k]=Cauchy[glim1w,k-I eps]//Exp;
w[+1][+1][k_]:=w[+1][+1][k]=Cauchy[glim2w,k+I eps]//Exp;
w[-1][+1][k_]:=w[-1][+1][k]=Cauchy[glim2w,k-I eps]//Exp;
];
(* The first +/- indicates limit, the second indicates +/- a,b *)
Z[+1][-1][k_]:=({
 {1/\[Zeta][+1][-1][k], 0},
 {0, \[Zeta][+1][-1][k]}
});
Z[-1][-1][k_]:=({
 {1/\[Zeta][-1][-1][k], 0},
 {0, \[Zeta][-1][-1][k]}
});
Z[+1][+1][k_]:=({
 {1/\[Zeta][+1][+1][k], 0},
 {0, \[Zeta][+1][+1][k]}
});
Z[-1][+1][k_]:=({
 {1/\[Zeta][-1][+1][k], 0},
 {0, \[Zeta][-1][+1][k]}
});
W[+1][-1][k_]:=({
 {1/w[+1][-1][k], 0},
 {0, w[+1][-1][k]}
});
W[-1][-1][k_]:=({
 {1/w[-1][-1][k], 0},
 {0, w[-1][-1][k]}
});
W[+1][+1][k_]:=({
 {1/w[+1][+1][k], 0},
 {0, w[+1][+1][k]}
});
W[-1][+1][k_]:=({
 {1/w[-1][+1][k], 0},
 {0, w[-1][+1][k]}
});
Zx[_][_][k_]:=({
 {0, 0},
 {0, 0}
});
Zsamp[_][_][k_]:=({
 {1, 1},
 {1, 1}
});
Wsamp[_][_][k_]:=({
 {1, 1},
 {1, 1}
});
Wx[_][_][k_]:=({
 {0, 0},
 {0, 0}
});
cs[-1][k_]:=({
 {\[Delta]cs[k,-1], 0.},
 {0, 1/\[Delta]cs[k,-1]}
});
\[CapitalDelta]cs[+1][k_]:=({
 {\[Delta]cs[k,+1], 0},
 {0, 1/\[Delta]cs[k,+1]}
});
\[CapitalDelta]csx[_][k_]:=({
 {0, 0},
 {0, 0}
});
\[CapitalDelta]csk[-1][k_]:=({
 {\[Delta]csk[k,-1], 0.},
 {0, 1/\[Delta]csk[k,-1]}
});
\[CapitalDelta]csk[+1][k_]:=({
 {\[Delta]csk[k,+1], 0},
 {0, 1/\[Delta]csk[k,+1]}
});
\[CapitalDelta]cskx[_][k_]:=({
 {0, 0},
 {0, 0}
});
\[CapitalDelta]k[-1][k_]:=({
 {1/\[Delta]csk[k,-1], 0.},
 {0, \[Delta]csk[k,-1]}
});
\[CapitalDelta]k[+1][k_]:=({
 {1/\[Delta]csk[k,+1], 0},
 {0, \[Delta]csk[k,+1]}
});
\[CapitalDelta]kx[_][k_]:=({
 {0, 0},
 {0, 0}
});


\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]k[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Ps[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Ps[x,t]],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Us[x,t]],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1]}];
\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]k[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Gs[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ls[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1]}];
\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]k[x_,t_][k_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Us[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}][k];

\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Ps[x,t]],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],W[+1][+1]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Us[x,t]],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],Z[+1][+1]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],W[-1][+1]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ls[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],Z[-1][+1]}];

\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Ps[x,t]],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],W[+1][-1]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Us[x,t]],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],Z[+1][-1]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],W[-1][-1]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ls[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],Z[-1][-1]}];

\[CapitalDelta]ki\[Phi]QinsStQs\[Phi]\[CapitalDelta]k[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],St[+1],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsStQs\[Phi]\[CapitalDelta]k[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],St[-1],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1]}];


\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]ksamp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Psamps[x,t],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]ksamp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],InvFun[Psamps[x,t]],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]ksamp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],InvFun[Usamps[x,t]],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]ksamp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Gsamps[x,t],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Lsamps[x,t],\[Phi]samp[-1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]ksamp[x_,t_][k_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Usamps[x,t],\[Phi]samp[+1][x,t]}][k];

\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]ksamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],InvFun[Psamps[x,t]],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]ksamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],InvFun[Usamps[x,t]],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Lsamps[x,t],\[Phi]samp[-1][x,t]}];

\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]ksamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],InvFun[Psamps[x,t]],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]ksamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],InvFun[Usamps[x,t]],\[Phi]samp[+1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Lsamps[x,t],\[Phi]samp[-1][x,t]}];


\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Psx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Uinsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1]}];
\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Gsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Lsx[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1]}];
\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]kx[x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Usx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1]}];

\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]kx[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],W[+1][+1]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]kx[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Uinsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],Z[+1][+1]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],W[-1][+1]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[+1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Lsx[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],Z[-1][+1]}];

\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]kx[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],W[+1][-1]}];
\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]kx[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[+1]],InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Uinsx[x,t],Qs[x,t],\[Phi][+1][x,t],\[CapitalDelta]k[+1],Z[+1][-1]}];
\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],W[-1][-1]}];
\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[-1][x_,t_]:=MultFun[{InvFun[\[CapitalDelta]k[-1]],InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Lsx[x,t],Qs[x,t],\[Phi][-1][x,t],\[CapitalDelta]k[-1],Z[-1][-1]}];



InnerModa[x_,t_]:=Min[Sqrt[2]a[s[x,t]],Sqrt[2]*\[Nu]];
shrinkt[x_,t_]:=Abs[x/6*K0[x,t]]^(-2/3)/2.;
radat[x_,t_]:=Min[a[s[x,t]]/1.2,(b[s[x,t]]-a[s[x,t]])/2.2,shrinkt[x,t]/2,InnerModa[x,t]/2.];
radbt[x_,t_]:=Min[a[s[x,t]]/1.2,(b[s[x,t]]-a[s[x,t]])/2.2,shrinkt[x,t]/2];
modulusa[x_,t_]:= Sqrt[2]\[Nu]


JJ[4][1][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-a[s[x,t]]+radat[x,t]Exp[I Pi/4],-a[s[x,t]]+InnerModa[x,t]*Exp[I*Pi/4]}],smallN};
JJ[4][2][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]k[x,t],Line[{a[s[x,t]]+InnerModa[x,t]*Exp[I*3Pi/4],a[s[x,t]]+radat[x,t]Exp[I 3Pi/4]}],smallN};
JJ[4][3][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-a[s[x,t]]+radat[x,t]Exp[-I Pi/4],-a[s[x,t]]+InnerModa[x,t]*Exp[-I*Pi/4]}],smallN};
JJ[4][4][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[x,t],Line[{a[s[x,t]]+InnerModa[x,t]*Exp[-I*3Pi/4],a[s[x,t]]+radat[x,t]Exp[-I 3 Pi/4]}],smallN};
JJ[4][5][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-b[s[x,t]]+radbt[x,t],-a[s[x,t]]-radat[x,t]}],smallN};
JJ[4][6][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]k[x,t],Line[{a[s[x,t]]+radat[x,t],b[s[x,t]]-radbt[x,t]}],smallN};
JJ[4][7][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]k[x,t],Line[{b[s[x,t]]+radbt[x,t]Exp[I Pi/4],b[s[x,t]]+modulusa[x,t]*Exp[I Pi/4]}],smallN};
JJ[4][8][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-b[s[x,t]]+modulusa[x,t]*Exp[I 3Pi/4],-b[s[x,t]]+radbt[x,t]Exp[I 3Pi/4]}],smallN};
JJ[4][9][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[x,t],Line[{b[s[x,t]]+radbt[x,t]Exp[-I Pi/4],b[s[x,t]]+modulusa[x,t]*Exp[-I Pi/4]}],smallN};
JJ[4][10][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-b[s[x,t]]+modulusa[x,t]*Exp[-3I Pi/4],-b[s[x,t]]+radbt[x,t]Exp[-3I Pi/4]}],smallN};

(*JJ[4][11][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[+1][x,t],Arc[a[s[x,t]],radat[x,t],{0,3Pi/4}],smallN};
JJ[4][12][x_,t_]:={Z[+1][+1],Arc[a[s[x,t]],radat[x,t],{3Pi/4,Pi}],smallN};
JJ[4][13][x_,t_]:={Z[-1][+1],Arc[a[s[x,t]],radat[x,t],{Pi,5Pi/4}],smallN};
JJ[4][14][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[+1][x,t],Arc[a[s[x,t]],radat[x,t],{5Pi/4,2Pi}],smallN};*)

JJ[4][11][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[+1][x,t],Line[{a[s[x,t]]+radat[x,t],a[s[x,t]]+radat[x,t]Exp[I 3 Pi/4]}],smallN};
JJ[4][12][x_,t_]:={Z[+1][+1],Line[{Exp[I 3Pi/4],Exp[I Pi]}radat[x,t]+a[s[x,t]]],smallN};
JJ[4][13][x_,t_]:={Z[-1][+1],Line[{Exp[I Pi],Exp[I 5 Pi/4]}radat[x,t]+a[s[x,t]]],smallN};
JJ[4][14][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[+1][x,t],Line[{Exp[I 5 Pi/4],1}radat[x,t]+a[s[x,t]]],smallN};

(*JJ[4][15][x_,t_]:={Z[+1][-1],Arc[-a[s[x,t]],radat[x,t],{0,Pi/4}],smallN};
JJ[4][16][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[-1][x,t],Arc[-a[s[x,t]],radat[x,t],{Pi/4,Pi}],smallN};
JJ[4][17][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[-1][x,t],Arc[-a[s[x,t]],radat[x,t],{Pi,7Pi/4}],smallN};
JJ[4][18][x_,t_]:={Z[-1][-1],Arc[-a[s[x,t]],radat[x,t],{7Pi/4,2Pi}],smallN};*)

JJ[4][15][x_,t_]:={Z[+1][-1],Line[{1,Exp[I Pi/4]}radat[x,t]-a[s[x,t]]],smallN};
JJ[4][16][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]k[-1][x,t],Line[{Exp[I Pi/4],Exp[I Pi]}radat[x,t]-a[s[x,t]]],smallN};
JJ[4][17][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[-1][x,t],Line[{Exp[I Pi],Exp[I 7Pi/4]}radat[x,t]-a[s[x,t]]],smallN};
JJ[4][18][x_,t_]:={Z[-1][-1],Line[{Exp[I 7Pi/4],Exp[I 2Pi]}radat[x,t]-a[s[x,t]]],smallN};


(*JJ[4][19][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[+1][x,t],Arc[b[s[x,t]],radbt[x,t],{Pi/4,Pi}],smallN};
JJ[4][20][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[+1][x,t],Arc[b[s[x,t]],radbt[x,t],{Pi,7Pi/4}],smallN};
JJ[4][21][x_,t_]:={W[-1][+1],Arc[b[s[x,t]],radbt[x,t],{-Pi/4,0}],smallN};
JJ[4][22][x_,t_]:={W[+1][+1],Arc[b[s[x,t]],radbt[x,t],{0,Pi/4}],smallN};*)

JJ[4][19][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[+1][x,t],Line[Exp[I{Pi/4,Pi}]radbt[x,t]+b[s[x,t]]],smallN};
JJ[4][20][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[+1][x,t],Line[Exp[I{Pi,7Pi/4}]radbt[x,t]+b[s[x,t]]],smallN};
JJ[4][21][x_,t_]:={W[-1][+1],Line[Exp[I{-Pi/4,0}]radbt[x,t]+b[s[x,t]]],smallN};
JJ[4][22][x_,t_]:={W[+1][+1],Line[Exp[I{0,Pi/4}]radbt[x,t]+b[s[x,t]]],smallN};

(*JJ[4][23][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[-1][x,t],Arc[-b[s[x,t]],radbt[x,t],{0,3Pi/4}],smallN};
JJ[4][24][x_,t_]:={W[+1][-1],Arc[-b[s[x,t]],radbt[x,t],{3Pi/4,Pi}],smallN};
JJ[4][25][x_,t_]:={W[-1][-1],Arc[-b[s[x,t]],radbt[x,t],{Pi,5Pi/4}],smallN};
JJ[4][26][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[-1][x,t],Arc[-b[s[x,t]],radbt[x,t],{5Pi/4,2Pi}],smallN};*)

JJ[4][23][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]k[-1][x,t],Line[Exp[I{0,3Pi/4}]radbt[x,t]-b[s[x,t]]],smallN};
JJ[4][24][x_,t_]:={W[+1][-1],Line[Exp[I{3Pi/4,Pi}]radbt[x,t]-b[s[x,t]]],smallN};
JJ[4][25][x_,t_]:={W[-1][-1],Line[Exp[I{Pi,5Pi/4}]radbt[x,t]-b[s[x,t]]],smallN};
JJ[4][26][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[-1][x,t],Line[Exp[I{5Pi/4,2Pi}]radbt[x,t]-b[s[x,t]]],smallN};

JJ[4][27][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-el+I \[Nu],-b[s[x,t]]+Exp[I 3 Pi/4] modulusa[x,t]}],smallN};
JJ[4][28][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-el-I \[Nu],-b[s[x,t]]+Exp[-I 3 Pi/4] modulusa[x,t]}],smallN};

JJ[4][29][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]k[x,t],Line[{b[s[x,t]]+Exp[I Pi/4] modulusa[x,t],I \[Nu] + el}],smallN};
JJ[4][30][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]k[x,t],Line[{b[s[x,t]]+Exp[-I Pi/4] modulusa[x,t],-I \[Nu] + el}],smallN};

JJ[4][31][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-a[s[x,t]]+InnerModa[x,t]*Exp[I*Pi/4],a[s[x,t]]+InnerModa[x,t]*Exp[I*3Pi/4]}],smallN};
JJ[4][32][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]k[x,t],Line[{-a[s[x,t]]+InnerModa[x,t]*Exp[-I*Pi/4],a[s[x,t]]+InnerModa[x,t]*Exp[-I*3Pi/4]}],smallN};


JJsamp[4][1][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-a[s[x,t]]+radat[x,t]Exp[I Pi/4],-a[s[x,t]]+InnerModa[x,t]*Exp[I*Pi/4]}],smallN};
JJsamp[4][2][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{a[s[x,t]]+InnerModa[x,t]*Exp[I*3Pi/4],a[s[x,t]]+radat[x,t]Exp[I 3Pi/4]}],smallN};
JJsamp[4][3][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-a[s[x,t]]+radat[x,t]Exp[-I Pi/4],-a[s[x,t]]+InnerModa[x,t]*Exp[-I*Pi/4]}],smallN};
JJsamp[4][4][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{a[s[x,t]]+InnerModa[x,t]*Exp[-I*3Pi/4],a[s[x,t]]+radat[x,t]Exp[-I 3 Pi/4]}],smallN};
JJsamp[4][5][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-b[s[x,t]]+radbt[x,t],-a[s[x,t]]-radat[x,t]}],smallN};
JJsamp[4][6][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{a[s[x,t]]+radat[x,t],b[s[x,t]]-radbt[x,t]}],smallN};
JJsamp[4][7][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{b[s[x,t]]+radbt[x,t]Exp[I Pi/4],b[s[x,t]]+modulusa[x,t]*Exp[I Pi/4]}],smallN};
JJsamp[4][8][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-b[s[x,t]]+modulusa[x,t]*Exp[I 3Pi/4],-b[s[x,t]]+radbt[x,t]Exp[I 3Pi/4]}],smallN};
JJsamp[4][9][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{b[s[x,t]]+radbt[x,t]Exp[-I Pi/4],b[s[x,t]]+modulusa[x,t]*Exp[-I Pi/4]}],smallN};
JJsamp[4][10][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-b[s[x,t]]+modulusa[x,t]*Exp[-3I Pi/4],-b[s[x,t]]+radbt[x,t]Exp[-3I Pi/4]}],smallN};

JJsamp[4][11][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]ksamp[+1][x,t],Line[{a[s[x,t]]+radat[x,t],a[s[x,t]]+radat[x,t]Exp[I 3 Pi/4]}],smallN};
JJsamp[4][12][x_,t_]:={Zsamp[+1][+1],Line[{Exp[I 3Pi/4],Exp[I Pi]}radat[x,t]+a[s[x,t]]],smallN};
JJsamp[4][13][x_,t_]:={Zsamp[-1][+1],Line[{Exp[I Pi],Exp[I 5 Pi/4]}radat[x,t]+a[s[x,t]]],smallN};
JJsamp[4][14][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[+1][x,t],Line[{Exp[I 5 Pi/4],1}radat[x,t]+a[s[x,t]]],smallN};

JJsamp[4][15][x_,t_]:={Zsamp[+1][-1],Line[{1,Exp[I Pi/4]}radat[x,t]-a[s[x,t]]],smallN};
JJsamp[4][16][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]ksamp[-1][x,t],Line[{Exp[I Pi/4],Exp[I Pi]}radat[x,t]-a[s[x,t]]],smallN};
JJsamp[4][17][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[-1][x,t],Line[{Exp[I Pi],Exp[I 7Pi/4]}radat[x,t]-a[s[x,t]]],smallN};
JJsamp[4][18][x_,t_]:={Zsamp[-1][-1],Line[{Exp[I 7Pi/4],Exp[I 2Pi]}radat[x,t]-a[s[x,t]]],smallN};

JJsamp[4][19][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]ksamp[+1][x,t],Line[Exp[I{Pi/4,Pi}]radbt[x,t]+b[s[x,t]]],smallN};
JJsamp[4][20][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[+1][x,t],Line[Exp[I{Pi,7Pi/4}]radbt[x,t]+b[s[x,t]]],smallN};
JJsamp[4][21][x_,t_]:={Wsamp[-1][+1],Line[Exp[I{-Pi/4,0}]radbt[x,t]+b[s[x,t]]],smallN};
JJsamp[4][22][x_,t_]:={Wsamp[+1][+1],Line[Exp[I{0,Pi/4}]radbt[x,t]+b[s[x,t]]],smallN};

JJsamp[4][23][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]ksamp[-1][x,t],Line[Exp[I{0,3Pi/4}]radbt[x,t]-b[s[x,t]]],smallN};
JJsamp[4][24][x_,t_]:={Wsamp[+1][-1],Line[Exp[I{3Pi/4,Pi}]radbt[x,t]-b[s[x,t]]],smallN};
JJsamp[4][25][x_,t_]:={Wsamp[-1][-1],Line[Exp[I{Pi,5Pi/4}]radbt[x,t]-b[s[x,t]]],smallN};
JJsamp[4][26][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[-1][x,t],Line[Exp[I{5Pi/4,2Pi}]radbt[x,t]-b[s[x,t]]],smallN};

JJsamp[4][27][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-el+I \[Nu],-b[s[x,t]]+Exp[I 3 Pi/4] modulusa[x,t]}],smallN};
JJsamp[4][28][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-el-I \[Nu],-b[s[x,t]]+Exp[-I 3 Pi/4] modulusa[x,t]}],smallN};

JJsamp[4][29][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{b[s[x,t]]+Exp[I Pi/4] modulusa[x,t],I \[Nu] + el}],smallN};
JJsamp[4][30][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{b[s[x,t]]+Exp[-I Pi/4] modulusa[x,t],-I \[Nu] + el}],smallN};

JJsamp[4][31][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-a[s[x,t]]+InnerModa[x,t]*Exp[I*Pi/4],a[s[x,t]]+InnerModa[x,t]*Exp[I*3Pi/4]}],smallN};
JJsamp[4][32][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]ksamp[x,t],Line[{-a[s[x,t]]+InnerModa[x,t]*Exp[-I*Pi/4],a[s[x,t]]+InnerModa[x,t]*Exp[-I*3Pi/4]}],smallN};


JJx[4][1][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-a[s[x,t]]+radat[x,t]Exp[I Pi/4],-a[s[x,t]]+InnerModa[x,t]*Exp[I*Pi/4]}],smallN};
JJx[4][2][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{a[s[x,t]]+InnerModa[x,t]*Exp[I*3Pi/4],a[s[x,t]]+radat[x,t]Exp[I 3Pi/4]}],smallN};
JJx[4][3][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-a[s[x,t]]+radat[x,t]Exp[-I Pi/4],-a[s[x,t]]+InnerModa[x,t]*Exp[-I*Pi/4]}],smallN};
JJx[4][4][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{a[s[x,t]]+InnerModa[x,t]*Exp[-I*3Pi/4],a[s[x,t]]+radat[x,t]Exp[-I 3 Pi/4]}],smallN};
JJx[4][5][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-b[s[x,t]]+radbt[x,t],-a[s[x,t]]-radat[x,t]}],smallN};
JJx[4][6][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsGsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{a[s[x,t]]+radat[x,t],b[s[x,t]]-radbt[x,t]}],smallN};
JJx[4][7][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{b[s[x,t]]+radbt[x,t]Exp[I Pi/4],b[s[x,t]]+modulusa[x,t]*Exp[I Pi/4]}],smallN};
JJx[4][8][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-b[s[x,t]]+modulusa[x,t]*Exp[I 3Pi/4],-b[s[x,t]]+radbt[x,t]Exp[I 3Pi/4]}],smallN};
JJx[4][9][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{b[s[x,t]]+radbt[x,t]Exp[-I Pi/4],b[s[x,t]]+modulusa[x,t]*Exp[-I Pi/4]}],smallN};
JJx[4][10][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-b[s[x,t]]+modulusa[x,t]*Exp[-3I Pi/4],-b[s[x,t]]+radbt[x,t]Exp[-3I Pi/4]}],smallN};

JJx[4][11][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]kx[+1][x,t],Line[{a[s[x,t]]+radat[x,t],a[s[x,t]]+radat[x,t]Exp[I 3 Pi/4]}],smallN};
JJx[4][12][x_,t_]:={Zx[+1][+1],Line[{Exp[I 3Pi/4],Exp[I Pi]}radat[x,t]+a[s[x,t]]],smallN};
JJx[4][13][x_,t_]:={Zx[-1][+1],Line[{Exp[I Pi],Exp[I 5 Pi/4]}radat[x,t]+a[s[x,t]]],smallN};
JJx[4][14][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[+1][x,t],Line[{Exp[I 5 Pi/4],1}radat[x,t]+a[s[x,t]]],smallN};

JJx[4][15][x_,t_]:={Zx[+1][-1],Line[{1,Exp[I Pi/4]}radat[x,t]-a[s[x,t]]],smallN};
JJx[4][16][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUinsQs\[Phi]\[CapitalDelta]kx[-1][x,t],Line[{Exp[I Pi/4],Exp[I Pi]}radat[x,t]-a[s[x,t]]],smallN};
JJx[4][17][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[-1][x,t],Line[{Exp[I Pi],Exp[I 7Pi/4]}radat[x,t]-a[s[x,t]]],smallN};
JJx[4][18][x_,t_]:={Zx[-1][-1],Line[{Exp[I 7Pi/4],Exp[I 2Pi]}radat[x,t]-a[s[x,t]]],smallN};

JJx[4][19][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]kx[+1][x,t],Line[Exp[I{Pi/4,Pi}]radbt[x,t]+b[s[x,t]]],smallN};
JJx[4][20][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[+1][x,t],Line[Exp[I{Pi,7Pi/4}]radbt[x,t]+b[s[x,t]]],smallN};
JJx[4][21][x_,t_]:={Wx[-1][+1],Line[Exp[I{-Pi/4,0}]radbt[x,t]+b[s[x,t]]],smallN};
JJx[4][22][x_,t_]:={Wx[+1][+1],Line[Exp[I{0,Pi/4}]radbt[x,t]+b[s[x,t]]],smallN};

JJx[4][23][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPinsQs\[Phi]\[CapitalDelta]kx[-1][x,t],Line[Exp[I{0,3Pi/4}]radbt[x,t]-b[s[x,t]]],smallN};
JJx[4][24][x_,t_]:={Wx[+1][-1],Line[Exp[I{3Pi/4,Pi}]radbt[x,t]-b[s[x,t]]],smallN};
JJx[4][25][x_,t_]:={Wx[-1][-1],Line[Exp[I{Pi,5Pi/4}]radbt[x,t]-b[s[x,t]]],smallN};
JJx[4][26][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[-1][x,t],Line[Exp[I{5Pi/4,2Pi}]radbt[x,t]-b[s[x,t]]],smallN};

JJx[4][27][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-el+I \[Nu],-b[s[x,t]]+Exp[I 3 Pi/4] modulusa[x,t]}],smallN};
JJx[4][28][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-el-I \[Nu],-b[s[x,t]]+Exp[-I 3 Pi/4] modulusa[x,t]}],smallN};

JJx[4][29][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsPsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{b[s[x,t]]+Exp[I Pi/4] modulusa[x,t],I \[Nu] + el}],smallN};
JJx[4][30][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsMsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{b[s[x,t]]+Exp[-I Pi/4] modulusa[x,t],-I \[Nu] + el}],smallN};

JJx[4][31][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsUsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-a[s[x,t]]+InnerModa[x,t]*Exp[I*Pi/4],a[s[x,t]]+InnerModa[x,t]*Exp[I*3Pi/4]}],smallN};
JJx[4][32][x_,t_]:={\[CapitalDelta]ki\[Phi]QinsLsQs\[Phi]\[CapitalDelta]kx[x,t],Line[{-a[s[x,t]]+InnerModa[x,t]*Exp[-I*Pi/4],a[s[x,t]]+InnerModa[x,t]*Exp[-I*3Pi/4]}],smallN};


J[4][x_,t_]:=Module[{r,end},
end=32;
If[Abs[InnerModa[x,t]*Sin[Pi/4]-a[s[x,t]]]<10.^(-13),end=end-2];
Table[JJ[4][i][x,t],{i,1,end}]//Transpose
];

Jsamp[4][x_,t_]:=Module[{r,end},
end=32;
If[Abs[InnerModa[x,t]*Sin[Pi/4]-a[s[x,t]]]<10.^(-13),end=end-2];
Table[JJsamp[4][i][x,t],{i,1,end}]//Transpose
];

Jx[4][x_,t_]:=Module[{r,end},
end=32;
If[Abs[InnerModa[x,t]*Sin[Pi/4]-a[s[x,t]]]<10.^(-13),end=end-2];
Table[JJx[4][i][x,t],{i,1,end}]//Transpose
];
Jadapt[4][x_,t_]:=Adapt[Jsamp[4][x,t],globalTol][J[4][x,t]];
Jadaptx[4][x_,t_]:=Adapt[Jsamp[4][x,t],globalTol][Jx[4][x,t]];

KdVRHPx[4][n_,S_,x_,t_]:=Module[{A,pole,res,rc,i,r,end},
rc = S[[1]];
pole=S[[2]];
res = S[[3]];
end=28;
If[Abs[InnerModa[x,t,pole]*Sin[Pi/4]-a[s[x,t]]]<10.^(-13),end=end-2];
r=Min[{ChooseRadius[pole]/2,.1}];
A =Table[Jx[4][i][n,x,t,rc,pole,res,0],{i,1,end}];
For[i =1, i<=Length[res],i++,
A = Join[A,
PoleArray[+1,r,n,\[CapitalDelta]ki\[Phi]QtiStQt\[Phi]\[CapitalDelta]kx[+1]][x,t,rc,pole,res,i],
PoleArray[-1,r,n,\[CapitalDelta]ki\[Phi]QtiStQt\[Phi]\[CapitalDelta]kx[-1]][x,t,rc,pole,res,i]];
];
A];


EllipInt1[a_,b_,n_]:=Fun[Sqrt[(a^2-#^2)(b^2-#^2)]&,Line[{0,a}],n]//DomainIntegrate;
EllipInta1[a_,n_]:=24*EllipInt1[a,Sqrt[2-a^2],n];
RootInt1[s_,n_]:=Module[{F},
F[A_]:=s -EllipInta1[A,n];
F];
EllipFun1[s_,n_]:=Fun[RootInt1[s,n][#]&,Line[{0,1}],n];
\[Alpha]\[Alpha]Newton1[s_,n_]:= mNewtonMethod[EllipFun1[s,n],.5];
a1//Clear;
a1[s_]:=a1[s]=\[Alpha]\[Alpha]Newton1[s,100][100]//Re;
a1[x_,t_]:=a1[.1/(tau[x,t])];
b1[x_,t_]:=Sqrt[2-a1[x,t]^2];
b1[s_]:=Sqrt[2-a1[s]^2];


ci1//Clear;
ci1[xx_,tt_]:=ci1[xx,tt]=(Fun[-\[Theta]p[#,xx,tt]&,{Line[{-b1[xx,tt],-a1[xx,tt]}],Line[{a1[xx,tt],b1[xx,tt]}]},{30,30}]//CauchyInverseCurves);
TransitionGFUN[]:=Module[{},
gfun//Clear;
gfun[p_,z_,xx_,tt_]:=gfun[p,z,xx,tt]=CauchyInverseIntegral[p,#,z]&/@ci1[xx,tt]//Total;
];
Generate\[Zeta]t[x_,t_]:=Module[{eps},
eps = $MachineEpsilon*10;
\[Zeta]//Clear;
glim11 = Fun[gfun[1,#,x,t]-gfun[-1,#,x,t]&,Line[{-b1[x,t],-a1[x,t]}],50];
glim21 = Fun[gfun[1,#,x,t]-gfun[-1,#,x,t]&,Line[{a1[x,t],b1[x,t]}],50];
\[Zeta][+1][+1][k_]:=\[Zeta][+1][+1][k]=(Cauchy[glim21,k+I eps])//Exp;
\[Zeta][-1][+1][k_]:=\[Zeta][-1][+1][k]=(Cauchy[glim21,k-I eps])//Exp;
\[Zeta][+1][-1][k_]:=\[Zeta][+1][-1][k]=(Cauchy[glim11,k+I eps])//Exp;
\[Zeta][-1][-1][k_]:=\[Zeta][-1][-1][k]=(Cauchy[glim11,k-I eps])//Exp;
];
\[Psi]1[+1][x_,t_][k_]:=({
 {-ConstInt[gfun[1,0.,x,t]-gfun[-1,0.,x,t],a1[x,t],k+I*10^(-16)]//Exp, 0},
 {0, ConstInt[gfun[1,0.,x,t]-gfun[-1,0.,x,t],a1[x,t],k+I*10^(-16)]//Exp}
});
\[Psi]1[-1][x_,t_][k_]:=({
 {-ConstInt[gfun[1,0.,x,t]-gfun[-1,0.,x,t],a1[x,t],k-I*10^(-16)]//Exp, 0},
 {0, ConstInt[gfun[1,0.,x,t]-gfun[-1,0.,x,t],a1[x,t],k-I*10^(-16)]//Exp}
});
ConstInt[cc_,aa_,z_]:=(I cc ArcTanh[aa/z])/\[Pi];



\[Phi]QinsPsQs\[Phi][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Ps[x,t],Qs[x,t],\[Phi][+1][x,t]}];
\[Phi]QinsPinsQs\[Phi][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Ps[x,t]],Qs[x,t],\[Phi][+1][x,t]}];
(*\[Phi]QinsUinsQs\[Phi][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],InvFun[Us[x,t]],Qs[x,t],\[Phi][+1][x,t]}];*)
\[Phi]QinsMsQs\[Phi][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t]}];
\[Phi]QinsGsQs\[Phi][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Gs[x,t],Qs[x,t],\[Phi][+1][x,t]}];
(*\[Phi]QinsLsQs\[Phi][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ls[x,t],Qs[x,t],\[Phi][-1][x,t]}];
\[Phi]QinsUsQs\[Phi][x_,t_][k_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Us[x,t],Qs[x,t],\[Phi][+1][x,t]}][k];*)

\[Phi]QinsPinsQs\[Phi]a[+1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pins[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][+1],\[Psi]1[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]a[+1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][+1],\[Psi]1[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]a[-1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pins[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][-1],\[Psi]1[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]a[-1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][-1],\[Psi]1[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]b[+1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pins[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][+1]}];
\[Phi]QinsMsQs\[Phi]b[+1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][+1]}];

\[Phi]QinsPinsQs\[Phi]b[-1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pins[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][-1]}];
\[Phi]QinsMsQs\[Phi]b[-1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Ms[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][-1]}];


\[Phi]QinsPsQs\[Phi]samp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Psamps[x,t],\[Phi]samp[+1][x,t]}];
\[Phi]QinsPinsQs\[Phi]samp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]]InvFun[Psamps[x,t]],\[Phi]samp[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]samp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];
\[Phi]QinsGsQs\[Phi]samp[x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Gsamps[x,t],\[Phi]samp[+1][x,t]}];

\[Phi]QinsPinsQs\[Phi]asamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Pinsamps[x,t],\[Phi]samp[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]asamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]asamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Pinsamps[x,t],\[Phi]samp[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]asamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]bsamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Pinsamps[x,t],\[Phi]samp[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]bsamp[+1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]bsamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[+1][x,t]],Pinsamps[x,t],\[Phi]samp[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]bsamp[-1][x_,t_]:=MultFun[{InvFun[\[Phi]samp[-1][x,t]],Msamps[x,t],\[Phi]samp[-1][x,t]}];


\[Phi]QinsPsQs\[Phi]x[x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Psx[x,t],Qs[x,t],\[Phi][+1][x,t]}];
\[Phi]QinsPinsQs\[Phi]x[x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t]}];
\[Phi]QinsMsQs\[Phi]x[x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t]}];
\[Phi]QinsGsQs\[Phi]x[x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Gsx[x,t],Qs[x,t],\[Phi][+1][x,t]}];

\[Phi]QinsPinsQs\[Phi]ax[+1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][+1],\[Psi]1[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]ax[+1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][+1],\[Psi]1[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]ax[-1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][-1],\[Psi]1[+1][x,t]}];
\[Phi]QinsMsQs\[Phi]ax[-1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][-1],\[Psi]1[-1][x,t]}];

\[Phi]QinsPinsQs\[Phi]bx[+1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][+1]}];
\[Phi]QinsMsQs\[Phi]bx[+1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][+1]}];

\[Phi]QinsPinsQs\[Phi]bx[-1][x_,t_]:=MultFun[{InvFun[\[Phi][+1][x,t]],InvFun[Qs[x,t]],Pinsx[x,t],Qs[x,t],\[Phi][+1][x,t],Z[+1][-1]}];
\[Phi]QinsMsQs\[Phi]bx[-1][x_,t_]:=MultFun[{InvFun[\[Phi][-1][x,t]],InvFun[Qs[x,t]],Msx[x,t],Qs[x,t],\[Phi][-1][x,t],Z[-1][-1]}];


shrinkt[x_,t_]:=Abs[x/6*K0[x,t]]^(-2/3)/2.;
radatran[x_,t_]:=Min[a1[x,t]/1.2,(b1[x,t]-a1[x,t])/2.2,shrinkt[x,t]/2,\[Nu]];
radbtran[x_,t_]:=Min[a1[x,t]/1.2,(b1[x,t]-a1[x,t])/2.2,shrinkt[x,t]/2,\[Nu]];
modulusa[x_,t_]:= Sqrt[2]\[Nu]


JJ[5][1][x_,t_]:={\[Phi]QinsGsQs\[Phi][x,t],Line[{-a1[x,t]+radatran[x,t],a1[x,t]-radatran[x,t]}],smallN};
JJ[5][2][x_,t_]:={\[Phi]QinsGsQs\[Phi][x,t],Line[{-b1[x,t]+radbtran[x,t],-a1[x,t]-radatran[x,t]}],smallN};
JJ[5][3][x_,t_]:={\[Phi]QinsGsQs\[Phi][x,t],Line[{a1[x,t]+radatran[x,t],b1[x,t]-radbtran[x,t]}],smallN};
JJ[5][4][x_,t_]:={\[Phi]QinsPsQs\[Phi][x,t],Line[{b1[x,t]+radbtran[x,t]Exp[I Pi/4],b1[x,t]+modulusa[x,t]*Exp[I Pi/4]}],smallN};
JJ[5][5][x_,t_]:={\[Phi]QinsPsQs\[Phi][x,t],Line[{-b1[x,t]+modulusa[x,t]*Exp[I 3Pi/4],-b1[x,t]+radbtran[x,t]Exp[I 3Pi/4]}],smallN};
JJ[5][6][x_,t_]:={\[Phi]QinsMsQs\[Phi][x,t],Line[{b1[x,t]+radbtran[x,t]Exp[-I Pi/4],b1[x,t]+modulusa[x,t]*Exp[-I Pi/4]}],smallN};
JJ[5][7][x_,t_]:={\[Phi]QinsMsQs\[Phi][x,t],Line[{-b1[x,t]+modulusa[x,t]*Exp[-3I Pi/4],-b1[x,t]+radbtran[x,t]Exp[-3I Pi/4]}],smallN};

JJ[5][8][x_,t_]:={\[Phi]QinsPinsQs\[Phi]b[-1][x,t],Line[Exp[I{0,3Pi/4}]radbtran[x,t]-b1[x,t]],smallN};
JJ[5][9][x_,t_]:={Z[+1][-1],Line[Exp[I{3Pi/4,Pi}]radbtran[x,t]-b1[x,t]],smallN};
JJ[5][10][x_,t_]:={Z[-1][-1],Line[Exp[I{Pi,5Pi/4}]radbtran[x,t]-b1[x,t]],smallN};
JJ[5][11][x_,t_]:={\[Phi]QinsMsQs\[Phi]b[-1][x,t],Line[Exp[I{5Pi/4,2Pi}]radbtran[x,t]-b1[x,t]],smallN};

JJ[5][12][x_,t_]:={\[Phi]QinsPinsQs\[Phi]a[-1][x,t],Line[{Exp[I Pi/2],Exp[I Pi]}radatran[x,t]-a1[x,t]],smallN};
JJ[5][13][x_,t_]:={\[Phi]QinsPinsQs\[Phi]a[-1][x,t],Line[{Exp[I 0],Exp[I Pi/2]}radatran[x,t]-a1[x,t]],smallN};
JJ[5][14][x_,t_]:={\[Phi]QinsMsQs\[Phi]a[-1][x,t],Line[{Exp[-I Pi],Exp[-I Pi/2]}radatran[x,t]-a1[x,t]],smallN};
JJ[5][15][x_,t_]:={\[Phi]QinsMsQs\[Phi]a[-1][x,t],Line[{Exp[-I Pi/2],Exp[-I 0]}radatran[x,t]-a1[x,t]],smallN};

JJ[5][16][x_,t_]:={\[Phi]QinsPinsQs\[Phi]b[+1][x,t],Line[Exp[I{Pi/4,Pi}]radbtran[x,t]+b1[x,t]],smallN};
JJ[5][17][x_,t_]:={\[Phi]QinsMsQs\[Phi]b[+1][x,t],Line[Exp[I{Pi,7Pi/4}]radbtran[x,t]+b1[x,t]],smallN};
JJ[5][18][x_,t_]:={Z[-1][+1],Line[Exp[I{-Pi/4,0}]radbtran[x,t]+b1[x,t]],smallN};
JJ[5][19][x_,t_]:={Z[+1][+1],Line[Exp[I{0,Pi/4}]radbtran[x,t]+b1[x,t]],smallN};

JJ[5][20][x_,t_]:={\[Phi]QinsPinsQs\[Phi]a[+1][x,t],Line[{Exp[I Pi/2],Exp[I Pi]}radatran[x,t]+a1[x,t]],smallN};
JJ[5][21][x_,t_]:={\[Phi]QinsPinsQs\[Phi]a[+1][x,t],Line[{Exp[I 0],Exp[I Pi/2]}radatran[x,t]+a1[x,t]],smallN};
JJ[5][22][x_,t_]:={\[Phi]QinsMsQs\[Phi]a[+1][x,t],Line[{Exp[-I Pi],Exp[-I Pi/2]}radatran[x,t]+a1[x,t]],smallN};
JJ[5][23][x_,t_]:={\[Phi]QinsMsQs\[Phi]a[+1][x,t],Line[{Exp[-I Pi/2],Exp[-I 0]}radatran[x,t]+a1[x,t]],smallN};

JJ[5][24][x_,t_]:={\[Phi]QinsPsQs\[Phi][x,t],Line[{-el + I \[Nu],-b1[x,t]+\[Nu] Sqrt[2]Exp[I 3 Pi/4]}],smallN};
JJ[5][25][x_,t_]:={\[Phi]QinsMsQs\[Phi][x,t],Line[{-el -I \[Nu],-b1[x,t]+\[Nu] Sqrt[2]Exp[-I 3 Pi/4]}],smallN};

JJ[5][26][x_,t_]:={\[Phi]QinsPsQs\[Phi][x,t],Line[{b1[x,t]+\[Nu] Sqrt[2]Exp[I Pi/4],I \[Nu]+ el}],smallN};
JJ[5][27][x_,t_]:={\[Phi]QinsMsQs\[Phi][x,t],Line[{b1[x,t]+\[Nu] Sqrt[2]Exp[-I Pi/4],-I \[Nu]+ el}],smallN};



JJsamp[5][1][x_,t_]:={\[Phi]QinsGsQs\[Phi]samp[x,t],Line[{-a1[x,t]+radatran[x,t],a1[x,t]-radatran[x,t]}],smallN};
JJsamp[5][2][x_,t_]:={\[Phi]QinsGsQs\[Phi]samp[x,t],Line[{-b1[x,t]+radbtran[x,t],-a1[x,t]-radatran[x,t]}],smallN};
JJsamp[5][3][x_,t_]:={\[Phi]QinsGsQs\[Phi]samp[x,t],Line[{a1[x,t]+radatran[x,t],b1[x,t]-radbtran[x,t]}],smallN};
JJsamp[5][4][x_,t_]:={\[Phi]QinsPsQs\[Phi]samp[x,t],Line[{b1[x,t]+radbtran[x,t]Exp[I Pi/4],b1[x,t]+modulusa[x,t]*Exp[I Pi/4]}],smallN};
JJsamp[5][5][x_,t_]:={\[Phi]QinsPsQs\[Phi]samp[x,t],Line[{-b1[x,t]+modulusa[x,t]*Exp[I 3Pi/4],-b1[x,t]+radbtran[x,t]Exp[I 3Pi/4]}],smallN};
JJsamp[5][6][x_,t_]:={\[Phi]QinsMsQs\[Phi]samp[x,t],Line[{b1[x,t]+radbtran[x,t]Exp[-I Pi/4],b1[x,t]+modulusa[x,t]*Exp[-I Pi/4]}],smallN};
JJsamp[5][7][x_,t_]:={\[Phi]QinsMsQs\[Phi]samp[x,t],Line[{-b1[x,t]+modulusa[x,t]*Exp[-3I Pi/4],-b1[x,t]+radbtran[x,t]Exp[-3I Pi/4]}],smallN};

JJsamp[5][8][x_,t_]:={\[Phi]QinsPinsQs\[Phi]bsamp[-1][x,t],Line[Exp[I{0,3Pi/4}]radbtran[x,t]-b1[x,t]],smallN};
JJsamp[5][9][x_,t_]:={Zsamp[+1][-1],Line[Exp[I{3Pi/4,Pi}]radbtran[x,t]-b1[x,t]],smallN};
JJsamp[5][10][x_,t_]:={Zsamp[-1][-1],Line[Exp[I{Pi,5Pi/4}]radbtran[x,t]-b1[x,t]],smallN};
JJsamp[5][11][x_,t_]:={\[Phi]QinsMsQs\[Phi]bsamp[-1][x,t],Line[Exp[I{5Pi/4,2Pi}]radbtran[x,t]-b1[x,t]],smallN};

JJsamp[5][12][x_,t_]:={\[Phi]QinsPinsQs\[Phi]asamp[-1][x,t],Line[{Exp[I Pi/2],Exp[I Pi]}radatran[x,t]-a1[x,t]],smallN};
JJsamp[5][13][x_,t_]:={\[Phi]QinsPinsQs\[Phi]asamp[-1][x,t],Line[{Exp[I 0],Exp[I Pi/2]}radatran[x,t]-a1[x,t]],smallN};
JJsamp[5][14][x_,t_]:={\[Phi]QinsMsQs\[Phi]asamp[-1][x,t],Line[{Exp[-I Pi],Exp[-I Pi/2]}radatran[x,t]-a1[x,t]],smallN};
JJsamp[5][15][x_,t_]:={\[Phi]QinsMsQs\[Phi]asamp[-1][x,t],Line[{Exp[-I Pi/2],Exp[-I 0]}radatran[x,t]-a1[x,t]],smallN};

JJsamp[5][16][x_,t_]:={\[Phi]QinsPinsQs\[Phi]bsamp[+1][x,t],Line[Exp[I{Pi/4,Pi}]radbtran[x,t]+b1[x,t]],smallN};
JJsamp[5][17][x_,t_]:={\[Phi]QinsMsQs\[Phi]bsamp[+1][x,t],Line[Exp[I{Pi,7Pi/4}]radbtran[x,t]+b1[x,t]],smallN};
JJsamp[5][18][x_,t_]:={Zsamp[-1][+1],Line[Exp[I{-Pi/4,0}]radbtran[x,t]+b1[x,t]],smallN};
JJsamp[5][19][x_,t_]:={Zsamp[+1][+1],Line[Exp[I{0,Pi/4}]radbtran[x,t]+b1[x,t]],smallN};

JJsamp[5][20][x_,t_]:={\[Phi]QinsPinsQs\[Phi]asamp[+1][x,t],Line[{Exp[I Pi/2],Exp[I Pi]}radatran[x,t]+a1[x,t]],smallN};
JJsamp[5][21][x_,t_]:={\[Phi]QinsPinsQs\[Phi]asamp[+1][x,t],Line[{Exp[I 0],Exp[I Pi/2]}radatran[x,t]+a1[x,t]],smallN};
JJsamp[5][22][x_,t_]:={\[Phi]QinsMsQs\[Phi]asamp[+1][x,t],Line[{Exp[-I Pi],Exp[-I Pi/2]}radatran[x,t]+a1[x,t]],smallN};
JJsamp[5][23][x_,t_]:={\[Phi]QinsMsQs\[Phi]asamp[+1][x,t],Line[{Exp[-I Pi/2],Exp[-I 0]}radatran[x,t]+a1[x,t]],smallN};

JJsamp[5][24][x_,t_]:={\[Phi]QinsPsQs\[Phi]samp[x,t],Line[{-el + I \[Nu],-b1[x,t]+\[Nu] Sqrt[2]Exp[I 3 Pi/4]}],smallN};
JJsamp[5][25][x_,t_]:={\[Phi]QinsMsQs\[Phi]samp[x,t],Line[{-el -I \[Nu],-b1[x,t]+\[Nu] Sqrt[2]Exp[-I 3 Pi/4]}],smallN};

JJsamp[5][26][x_,t_]:={\[Phi]QinsPsQs\[Phi]samp[x,t],Line[{b1[x,t]+\[Nu] Sqrt[2]Exp[I Pi/4],I \[Nu]+ el}],smallN};
JJsamp[5][27][x_,t_]:={\[Phi]QinsMsQs\[Phi]samp[x,t],Line[{b1[x,t]+\[Nu] Sqrt[2]Exp[-I Pi/4],-I \[Nu]+ el}],smallN};



JJx[5][1][x_,t_]:={\[Phi]QinsGsQs\[Phi]x[x,t],Line[{-a1[x,t]+radatran[x,t],a1[x,t]-radatran[x,t]}],smallN};
JJx[5][2][x_,t_]:={\[Phi]QinsGsQs\[Phi]x[x,t],Line[{-b1[x,t]+radbtran[x,t],-a1[x,t]-radatran[x,t]}],smallN};
JJx[5][3][x_,t_]:={\[Phi]QinsGsQs\[Phi]x[x,t],Line[{a1[x,t]+radatran[x,t],b1[x,t]-radbtran[x,t]}],smallN};
JJx[5][4][x_,t_]:={\[Phi]QinsPsQs\[Phi]x[x,t],Line[{b1[x,t]+radbtran[x,t]Exp[I Pi/4],b1[x,t]+modulusa[x,t]*Exp[I Pi/4]}],smallN};
JJx[5][5][x_,t_]:={\[Phi]QinsPsQs\[Phi]x[x,t],Line[{-b1[x,t]+modulusa[x,t]*Exp[I 3Pi/4],-b1[x,t]+radbtran[x,t]Exp[I 3Pi/4]}],smallN};
JJx[5][6][x_,t_]:={\[Phi]QinsMsQs\[Phi]x[x,t],Line[{b1[x,t]+radbtran[x,t]Exp[-I Pi/4],b1[x,t]+modulusa[x,t]*Exp[-I Pi/4]}],smallN};
JJx[5][7][x_,t_]:={\[Phi]QinsMsQs\[Phi]x[x,t],Line[{-b1[x,t]+modulusa[x,t]*Exp[-3I Pi/4],-b1[x,t]+radbtran[x,t]Exp[-3I Pi/4]}],smallN};

JJx[5][8][x_,t_]:={\[Phi]QinsPinsQs\[Phi]bx[-1][x,t],Line[Exp[I{0,3Pi/4}]radbtran[x,t]-b1[x,t]],smallN};
JJx[5][9][x_,t_]:={Zx[+1][-1],Line[Exp[I{3Pi/4,Pi}]radbtran[x,t]-b1[x,t]],smallN};
JJx[5][10][x_,t_]:={Zx[-1][-1],Line[Exp[I{Pi,5Pi/4}]radbtran[x,t]-b1[x,t]],smallN};
JJx[5][11][x_,t_]:={\[Phi]QinsMsQs\[Phi]bx[-1][x,t],Line[Exp[I{5Pi/4,2Pi}]radbtran[x,t]-b1[x,t]],smallN};

JJx[5][12][x_,t_]:={\[Phi]QinsPinsQs\[Phi]ax[-1][x,t],Line[{Exp[I Pi/2],Exp[I Pi]}radatran[x,t]-a1[x,t]],smallN};
JJx[5][13][x_,t_]:={\[Phi]QinsPinsQs\[Phi]ax[-1][x,t],Line[{Exp[I 0],Exp[I Pi/2]}radatran[x,t]-a1[x,t]],smallN};
JJx[5][14][x_,t_]:={\[Phi]QinsMsQs\[Phi]ax[-1][x,t],Line[{Exp[-I Pi],Exp[-I Pi/2]}radatran[x,t]-a1[x,t]],smallN};
JJx[5][15][x_,t_]:={\[Phi]QinsMsQs\[Phi]ax[-1][x,t],Line[{Exp[-I Pi/2],Exp[-I 0]}radatran[x,t]-a1[x,t]],smallN};

JJx[5][16][x_,t_]:={\[Phi]QinsPinsQs\[Phi]bx[+1][x,t],Line[Exp[I{Pi/4,Pi}]radbtran[x,t]+b1[x,t]],smallN};
JJx[5][17][x_,t_]:={\[Phi]QinsMsQs\[Phi]bx[+1][x,t],Line[Exp[I{Pi,7Pi/4}]radbtran[x,t]+b1[x,t]],smallN};
JJx[5][18][x_,t_]:={Zx[-1][+1],Line[Exp[I{-Pi/4,0}]radbtran[x,t]+b1[x,t]],smallN};
JJx[5][19][x_,t_]:={Zx[+1][+1],Line[Exp[I{0,Pi/4}]radbtran[x,t]+b1[x,t]],smallN};

JJx[5][20][x_,t_]:={\[Phi]QinsPinsQs\[Phi]ax[+1][x,t],Line[{Exp[I Pi/2],Exp[I Pi]}radatran[x,t]+a1[x,t]],smallN};
JJx[5][21][x_,t_]:={\[Phi]QinsPinsQs\[Phi]ax[+1][x,t],Line[{Exp[I 0],Exp[I Pi/2]}radatran[x,t]+a1[x,t]],smallN};
JJx[5][22][x_,t_]:={\[Phi]QinsMsQs\[Phi]ax[+1][x,t],Line[{Exp[-I Pi],Exp[-I Pi/2]}radatran[x,t]+a1[x,t]],smallN};
JJx[5][23][x_,t_]:={\[Phi]QinsMsQs\[Phi]ax[+1][x,t],Line[{Exp[-I Pi/2],Exp[-I 0]}radatran[x,t]+a1[x,t]],smallN};

JJx[5][24][x_,t_]:={\[Phi]QinsPsQs\[Phi]x[x,t],Line[{-el + I \[Nu],-b1[x,t]+\[Nu] Sqrt[2]Exp[I 3 Pi/4]}],smallN};
JJx[5][25][x_,t_]:={\[Phi]QinsMsQs\[Phi]x[x,t],Line[{-el -I \[Nu],-b1[x,t]+\[Nu] Sqrt[2]Exp[-I 3 Pi/4]}],smallN};

JJx[5][26][x_,t_]:={\[Phi]QinsPsQs\[Phi]x[x,t],Line[{b1[x,t]+\[Nu] Sqrt[2]Exp[I Pi/4],I \[Nu]+ el}],smallN};
JJx[5][27][x_,t_]:={\[Phi]QinsMsQs\[Phi]x[x,t],Line[{b1[x,t]+\[Nu] Sqrt[2]Exp[-I Pi/4],-I \[Nu]+ el}],smallN};


J[5][x_,t_]:=Module[{r,end},
end=27;
Table[JJ[5][i][x,t],{i,1,end}]//Transpose
];

Jsamp[5][x_,t_]:=Module[{r,end},
end=27;
Table[JJsamp[5][i][x,t],{i,1,end}]//Transpose
];

Jx[5][x_,t_]:=Module[{r,end},
end=27;
Table[JJx[5][i][x,t],{i,1,end}]//Transpose
];
Jadapt[5][x_,t_]:=Adapt[Jsamp[5][x,t],globalTol][J[5][x,t]];
Jadaptx[5][x_,t_]:=Adapt[Jsamp[5][x,t],globalTol][Jx[5][x,t]];


T[+1][x_,t_,a_,c_][z_]:=({
 {1, 0},
 {-c Exp[\[Theta][x,t][a]]/(z-a), 1}
});
T[-1][x_,t_,a_,c_][z_]:=({
 {1, \[Lambda] cc[-c Exp[\[Theta][x,t][a]]/(cc[z]-a)]},
 { 0, 1}
});
S[+1][x_,t_,a_,c_][z_]:=({
 {1, -(z-a)/c*Exp[-\[Theta][x,t][a]]},
 {0, 1}
});
S[-1][x_,t_,a_,c_][z_]:=({
 {1, 0},
 {\[Lambda] cc[-(cc[z]-a)/c*Exp[-\[Theta][x,t][a]]], 1}
});
Tx[+1][x_,t_,a_,c_][z_]:=({
 {0, 0},
 {-c \[Theta]x[x,t][a]Exp[\[Theta][x,t][a]]/(z-a), 0}
});
Tx[-1][x_,t_,a_,c_][z_]:=({
 {0, \[Lambda] cc[\[Theta]x[x,t][a]]cc[-c Exp[\[Theta][x,t][a]]/(cc[z]-a)]},
 { 0, 0}
});
Sx[+1][x_,t_,a_,c_][z_]:=({
 {0, (z-a)/c*\[Theta]x[x,t][a]Exp[-\[Theta][x,t][a]]},
 {0, 0}
});
Sx[-1][x_,t_,a_,c_][z_]:=({
 {0, 0},
 {\[Lambda] cc[-\[Theta]x[x,t][a]]cc[-(cc[z]-a)/c*Exp[-\[Theta][x,t][a]]], 0}
});
Tx[+1][x_,t_,a_,c_][k_]:=({
 {0, 0},
 {-\[Theta]x[x,t][a]*c Exp[\[Theta][x,t][a]]/(k-a), 0}
});
Tx[-1][x_,t_,a_,c_][k_]:=({
 {0, -\[Theta]x[x,t][a]*c Exp[\[Theta][x,t][a]]/(k+a)},
 {0, 0}
});
Sx[+1][x_,t_,a_,c_][k_]:=({
 {0, \[Theta]x[x,t][a]*(k-a)/c*Exp[-\[Theta][x,t][a]]},
 {0, 0}
});
Sx[-1][x_,t_,a_,c_][k_]:=({
 {0, 0},
 {\[Theta]x[x,t][a]*(k+a)/c*Exp[-\[Theta][x,t][a]], 0}
});
ContourArray[+1,r_,a_]:={Arc[a,r,{0,Pi}],Arc[a,r,{Pi,2Pi}]};
ContourArray[-1,r_,a_]:={Arc[a//cc,r,{0,-Pi}],Arc[a//cc,r,{-Pi,-2Pi}]};


PoleList[x_,t_]:=Module[{out,i,Domain,Jumps,Points},
Domain={};
Jumps={};
Points={};
For[i=1,i<=Length[A],i++,
If[1/globalTol>Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]&&Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]> globalTol,
If[Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]>expconst,
Jumps=Join[Jumps,{S[+1][x,t,A[[i]],c[[i]]],S[+1][x,t,A[[i]],c[[i]]]}];
Jumps=Join[Jumps,{S[-1][x,t,A[[i]],c[[i]]],S[-1][x,t,A[[i]],c[[i]]]}];
flag="pos";,
Jumps = Join[Jumps,{T[+1][x,t,A[[i]],c[[i]]],T[+1][x,t,A[[i]],c[[i]]]}];
Jumps = Join[Jumps,{T[-1][x,t,A[[i]],c[[i]]],T[-1][x,t,A[[i]],c[[i]]]}];
flag="neg";
];
Domain= Join[Domain,Join[ContourArray[+1,rad,A[[i]]],ContourArray[-1,rad,A[[i]]]]];
Points=Join[Points,{smallN,smallN,smallN,smallN}];
];
];
{Jumps,Domain,Points}
];
PoleListx[x_,t_]:=Module[{out,i,Domain,Jumps,Points},
Jumps={};
For[i=1,i<=Length[A],i++,
If[1/globalTol>Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]&&Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]> globalTol,
If[Abs[c[[i]]]Exp[Re[\[Theta][x,t][A[[i]]]]]>expconst,
Jumps=Join[Jumps,{Sx[+1][x,t,A[[i]],c[[i]]],Sx[+1][x,t,A[[i]],c[[i]]]}];
Jumps=Join[Jumps,{Sx[-1][x,t,A[[i]],c[[i]]],Sx[-1][x,t,A[[i]],c[[i]]]}];
flag="pos";,
Jumps = Join[Jumps,{Tx[+1][x,t,A[[i]],c[[i]]],Tx[+1][x,t,A[[i]],c[[i]]]}];
Jumps = Join[Jumps,{Tx[-1][x,t,A[[i]],c[[i]]],Tx[-1][x,t,A[[i]],c[[i]]]}];
flag="neg";
];
];
];
Jumps
];


DomainIntegrate[0.]:=0;
DomainIntegrate[{{0.,0.},{0.,0.}}]:={{0.,0.},{0.,0.}};
tcrit=8;
RMM1[M_]:=-(-M//AddIdentityMatrix);
KdV[i_][x_,t_]:=Module[{rhp1,rhp2,rhp1x,rhp2x,scale,\[CapitalPhi]1,\[CapitalPhi]2,\[CapitalPhi],out,t0,t1,t2,t3,t4,poles,pl,ja,sol,Cm1,solx,t1x,rh1,rh2,rh3,\[CapitalPhi]1in,\[CapitalPhi]1x,\[CapitalPhi]1inx,plx},
mRHSolver//Clear;
mRHSolver[X_]:=mRHSolver[X]=RHSolver[X];

RHSolvedx[X_,XX_]:=Module[{Cm,rhs},
If[X=={}&&XX=={},
sol[{}]={{0.,0.},{0.,0.}};
solx[{},{}]={{0.,0.},{0.,0.}};,

sol[X]=mRHSolver[X][X];
Cm=CauchyOperator[-1,mRHSolver[X]];
rhs=Cm[sol[X]]//AddIdentityMatrix;
solx[X,XX]=mRHSolver[X][X,rhs~FunListDot~XX];
];
];

RHSolved//Clear;
RHSolved[X_]:=RHSolved[X]=mRHSolver[X];
RHSolved[{}]:={{0.,0.},{0.,0}};
Cauchy[{{0.,0.},{0.,0.}},k_]:={{0.,0.},{0.,0.}};
If[i==4,
CSGFUN[];
Generate\[Delta]cs[x,t];
Generate\[Zeta][x,t];
];
If[i==5,
TransitionGFUN[];
Generate\[Zeta]t[x,t];
];

(* Construct first RHP and RHPx *)
(*Return[{Jadapt[i][x,t]//MakeListFun,Jadaptx[i][x,t]//MakeListFun}];*)
t0=AbsoluteTiming[ja=Jadapt[i][x,t]];
If[ja!={{}},
If[i<4,
t1=AbsoluteTiming[
rhp1=ConjugateList[ja,Q[x,t]]//MakeListFun;
rhp1x=ConjugateList[Jadaptx[i][x,t],Q[x,t]]//MakeListFun;
];,
t1=AbsoluteTiming[
rhp1=ja//MakeListFun;
rhp1x=Jadaptx[i][x,t]//MakeListFun;
];
];,
t1={0};
rhp1={};
rhp1x={};

];

t2 = AbsoluteTiming[RHSolvedx[rhp1,rhp1x];];
(*Return[{sol[rhp1],solx[rhp1,rhp1x]}];*)

(* Solution of first RHP and derivative with correct inverse scaling *)
InvScale[xx_]:=If[i <4, xx,xx/K0[x,t]];
\[CapitalPhi]1//Clear;\[CapitalPhi]1x//Clear;
\[CapitalPhi]1[z_]:=\[CapitalPhi]1[z]=Cauchy[sol[rhp1],z//InvScale]+IdentityMatrix[2];
\[CapitalPhi]1x[z_]:=\[CapitalPhi]1x[z]=Cauchy[solx[rhp1,rhp1x],z//InvScale];
\[CapitalPhi]1inx[z_]:=Module[{temp},
temp = \[CapitalPhi]1x[z];
{{temp[[2,2]],-temp[[1,2]]},{-temp[[2,1]],temp[[1,1]]}}
];
\[CapitalPhi]1in[z_]:=Module[{temp},
temp = \[CapitalPhi]1[z];
{{temp[[2,2]],-temp[[1,2]]},{-temp[[2,1]],temp[[1,1]]}}
];

pl=PoleList[x,t];
If[pl=={},
rhp2={};
t3={0};,
rhp2= ConjugateList[pl,Q[x,t]];
If[i==3,
rhp2= ConjugateList[rhp2,\[CapitalPhi]tin[x,t]];
];
If[i==4,
rhp2= ConjugateList[rhp2,\[CapitalDelta]k[1][#//InvScale]&];
rhp2= ConjugateList[rhp2,\[Phi][1][x,t][#//InvScale]&];
];
If[i==5,
rhp2= ConjugateList[rhp2,\[Phi][1][x,t][#//InvScale]&];
];
pl = rhp2;
t3=AbsoluteTiming[rhp2= ConjugateList[rhp2,\[CapitalPhi]1in]//MakeListFun;];
];

plx={PoleListx[x,t],pl[[2]],pl[[3]]};
If[plx[[1]]=={},
rhp2x={};
solx[rhp2,rhp2x]={{0.,0.},{0.,0.}};
t3={0};
t4 ={0};,
rhp2x= ConjugateList[plx,Q[x,t]];
If[i==3,
rhp2x= ConjugateList[rhp2x,\[CapitalPhi]tin[x,t]];
];
If[i==4,
rhp2x= ConjugateList[rhp2x,\[CapitalDelta]k[1][#//InvScale]&];
rhp2x= ConjugateList[rhp2x,\[Phi][1][x,t][#//InvScale]&];
];
If[i==5,
rhp2x= ConjugateList[rhp2x,\[Phi][1][x,t][#//InvScale]&];
];
t3=t3+AbsoluteTiming[rh1= MakeListFun[ConjugateList[rhp2x,\[CapitalPhi]1in]];
rh2=MakeListFun[RightMultiplyList[LeftMultiplyList[pl,\[CapitalPhi]1x],\[CapitalPhi]1in]];
rh3=MakeListFun[RightMultiplyList[LeftMultiplyList[pl,\[CapitalPhi]1],\[CapitalPhi]1inx]];
rhp2x=rh1+rh2 +rh3;
];
t4=AbsoluteTiming[RHSolvedx[rhp2,rhp2x]];
];
out=-(DomainIntegrate[solx[rhp1,rhp1x]]If[i>=4,K0[x,t],1]+DomainIntegrate[solx[rhp2,rhp2x]])/Pi;
(*out=-(DomainIntegrate[solx[rhp1,rhp1x]])/Pi;*)
out = out[[1,1]]+out[[2,1]];
domainOutput = DomainPlot[Join[rhp1,rhp2]];
timestring= "Region: " <>ToString[i]<>" ("<>ToString[x]<>","<>ToString[t]<>") "<>"0) Adapt: " <> ToString[t0//First]<>" 1) Construct: " <> ToString[t1//First]<>"  "<>"1) Solve: " <> ToString[t2//First]<>"  "<>"2) Construct: " <> ToString[t3//First]<>"  "<>"2) Solve: " <> ToString[t4//First];
If[timeflag,Print[timestring];];
{out,{rhp1,rhp1x},{rhp2,rhp2x},timestring,solx[rhp1,rhp1x],solx[rhp2,rhp2x]}
];
CSTSwitch[x_,t_]:=Module[{midT,midCS,Tflag,CSflag},
If[.1<.1/tau[x,t] < 15.9,
midT=8;
midT = Abs[.1/tau[x,t]-midT];,
 midT=\[Infinity];
];
If[.1<s[x,t]< 22.6,
midCS=11;
midCS = Abs[s[x,t]-midCS];,
 midCS=\[Infinity];
];
If[midCS==\[Infinity] && midT==\[Infinity], Return[3]];
If[midCS < midT, Return[4],Return[5]];
];
KdVAuto[x_,t_]:=\[Piecewise]{
 {KdV[0][x,t][[1]], Abs[x]<=3&&t<.1},
 {KdV[1][x,t][[1]], x >=0},
 {KdV[2.5][x,t][[1]], x <0 && Abs[x]<3t^(1/3)},
 {KdV[3][x,t][[1]], x<0 && K0[x,t]>1/10},
 {KdV[CSTSwitch[x,t]][x,t][[1]], True}
}



End[];
